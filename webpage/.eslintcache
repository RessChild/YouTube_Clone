[{"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\index.js":"1","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\App.js":"2","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\reportWebVitals.js":"3","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\index.js":"4","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\reportWebVitals.js":"5","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\App.js":"6","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\frames\\VideoFrame.js":"7","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\router.js":"8","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\SideItem\\SideItem.js":"9","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Empty\\Empty.js":"10","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Home\\Home.js":"11","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Home\\reducers\\HomeReducer.js":"12","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\VideoForm\\VideoForm.js":"13","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Add\\Add.js":"14","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\VideoPage\\VideoPage.js":"15","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\CustomButton\\CustomButton.js":"16","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\SignIn.js":"17","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignUp\\SignUp.js":"18","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\frames\\IdentifyFrame.js":"19","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignUp\\reducers\\SignUpReducer.js":"20","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\reducers\\SignInReducer.js":"21"},{"size":500,"mtime":1609393954129,"results":"22","hashOfConfig":"23"},{"size":944,"mtime":1609401996152,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1609393954129,"results":"25","hashOfConfig":"23"},{"size":517,"mtime":1612334429015,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1612334429015,"results":"28","hashOfConfig":"27"},{"size":942,"mtime":1613721199666,"results":"29","hashOfConfig":"27"},{"size":4473,"mtime":1614069359922,"results":"30","hashOfConfig":"27"},{"size":2175,"mtime":1613720415455,"results":"31","hashOfConfig":"27"},{"size":896,"mtime":1613632433235,"results":"32","hashOfConfig":"27"},{"size":173,"mtime":1612434881152,"results":"33","hashOfConfig":"27"},{"size":1437,"mtime":1612769537833,"results":"34","hashOfConfig":"27"},{"size":400,"mtime":1612505482554,"results":"35","hashOfConfig":"27"},{"size":1349,"mtime":1613460892946,"results":"36","hashOfConfig":"27"},{"size":2140,"mtime":1613547164857,"results":"37","hashOfConfig":"27"},{"size":4885,"mtime":1613636739510,"results":"38","hashOfConfig":"27"},{"size":315,"mtime":1613636464050,"results":"39","hashOfConfig":"27"},{"size":2497,"mtime":1614069034827,"results":"40","hashOfConfig":"27"},{"size":6062,"mtime":1614068458026,"results":"41","hashOfConfig":"27"},{"size":717,"mtime":1614058137880,"results":"42","hashOfConfig":"27"},{"size":772,"mtime":1614068456431,"results":"43","hashOfConfig":"27"},{"size":687,"mtime":1614068927872,"results":"44","hashOfConfig":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1bdsnzj",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1b3pixo",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"55"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\index.js",[],["96","97"],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\App.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\reportWebVitals.js",[],["98","99"],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\index.js",[],["100","101"],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\reportWebVitals.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\App.js",["102","103"],"import './App.css';\r\nimport { useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Redirect, Route, BrowserRouter, Switch } from \"react-router-dom\";\r\n\r\nimport VideoFrame from './frames/VideoFrame';\r\nimport IdentifyFrame from \"./frames/IdentifyFrame\";\r\n\r\nfunction App() {\r\n\r\n  // useEffect(() => {\r\n  //   // 일반 경로 테스트\r\n  //   axios.get('/example')\r\n  //     .then( ({ data }) => console.log(\"example test:\", data) )\r\n  //     .catch( e => console.log(e) );\r\n\r\n  //   // DB 연동 테스트\r\n  //   axios.get('/example/database')\r\n  //     .then( ({ data }) => console.log(\"database test:\", data) )\r\n  //     .catch( e => console.log(e) );\r\n  // }, [])\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/identify\" component={IdentifyFrame} />\r\n        <Route path=\"/\" component={VideoFrame} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\frames\\VideoFrame.js",["104","105"],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\router.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\SideItem\\SideItem.js",["106","107"],"import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Route, Router, useHistory } from \"react-router-dom\";\r\n\r\nconst MenuItem = ({ route, selected, mode }) => {\r\n\r\n    const history = useHistory();\r\n    const { classify, path, name } = route;\r\n\r\n    const onClickItem = () => {\r\n        // alert(\"응애응애\")\r\n        history.push(`${classify}${path}`);\r\n    }\r\n\r\n    return <Box height=\"2.5rem\" onClick={onClickItem} style={{ cursor: \"pointer\" }}\r\n        bgcolor={ (mode && selected) ? \"#c5c5c5\" : \"inherit\" } display=\"flex\" alignItems=\"center\" paddingLeft=\"1.5rem\">\r\n        <Box width=\"3rem\" display=\"flex\" alignItems=\"center\">\r\n            <route.icon size=\"1.32rem\" color={ selected ? \"#ff0000\" : \"#505050\" }/>\r\n        </Box>\r\n        { mode && <Box fontSize=\"0.9rem\" color=\"#505050\" fontWeight=\"600\" >{ name }</Box> }\r\n    </Box>\r\n};\r\n\r\nexport default MenuItem;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Empty\\Empty.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Home\\Home.js",["108","109","110"],"import React, { useEffect, useReducer, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\n\r\nimport { CHANGE_DATA, homeInit, homeReducer } from \"./reducers/HomeReducer\";\r\nimport VideoForm from \"../../components/VideoForm/VideoForm\";\r\n\r\nconst Home = () => {\r\n    const source = axios.CancelToken.source();\r\n\r\n    const [ state, dispatch ] = useReducer(homeReducer, homeInit);\r\n    const { isLoading, videos } = state;\r\n\r\n    const axiosVideos = () => {\r\n        dispatch({ type: CHANGE_DATA, data: { isLoading: true }});\r\n        axios.get('/api/home', { cancelToken: source.token })\r\n            .then(({ data }) => {\r\n                console.log(data);\r\n                dispatch({ type: CHANGE_DATA, data: { isLoading: false, videos: data }});\r\n            })\r\n            .catch( e => {\r\n                if(axios.isCancel(e)) return;\r\n                alert(e);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        axiosVideos();\r\n        return () => {\r\n            source.cancel();\r\n        }\r\n    }, [])\r\n\r\n    return <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" padding=\"1rem\" >\r\n            <Grid container style={{ width: \"100%\", maxWidth: \"92rem\" }}>\r\n            { videos.map( (video, idx) => <VideoForm key={`video-${idx}`} video={video}/> )}\r\n            </Grid>\r\n            <Box bgcolor=\"red\">로딩창</Box>\r\n        </Box>\r\n};\r\n\r\nexport default Home;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Home\\reducers\\HomeReducer.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\VideoForm\\VideoForm.js",["111"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\n\r\nimport Thumbnail from \"../../sources/youtube_thumbnail.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst VideoForm = ({ video }) => {\r\n    const { vid, title, description, thumbnail } = video;\r\n    const history = useHistory();\r\n\r\n    // 화면 이동\r\n    const onClickVideo = () => {\r\n        history.push(`/${vid}`);\r\n    }\r\n\r\n    return <Grid item xs={6} sm={6} md={3} style={{ padding: \"1rem 0.5rem\" }}>\r\n        <Box onClick={onClickVideo} style={{ cursor: \"pointer\" }}\r\n            display=\"flex\" alignItems=\"center\" justifyContent=\"center\" overflow=\"hidden\" \r\n            bgcolor=\"black\" maxWidth=\"100%\" paddingTop=\"calc(100% * 9 / 16)\" position=\"relative\">\r\n            <Box position=\"absolute\" width=\"100%\" height=\"100%\" top={0} right={0} \r\n                display=\"flex\" alignItems=\"center\" justifyContent=\"center\" >\r\n                <img alt=\"video thumbnail\" src={ thumbnail ? `/api/` : Thumbnail } style={{ maxWidth: '100%', maxHeight: \"100%\" }}/>\r\n            </Box>\r\n        </Box>\r\n        <Box display=\"flex\">\r\n            <Box>프로필</Box>\r\n            <Box display=\"flex\">\r\n            { title }\r\n            { description }\r\n            </Box>\r\n        </Box>\r\n    </Grid>;\r\n};\r\n\r\nexport default VideoForm;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Add\\Add.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\VideoPage\\VideoPage.js",["112","113","114"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Box, IconButton } from \"@material-ui/core\";\r\n\r\nimport { AiFillLike, AiFillDislike } from \"react-icons/ai\";\r\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\r\n\r\n\r\n// 비디오 출력\r\nconst VideoPage = ({ location: { pathname } }) => {\r\n    const source = axios.CancelToken.source();\r\n    const [ video, setVideo ] = useState({});\r\n\r\n    const axiosVideo = () => {\r\n        axios.get(`/api/video${pathname}`, { headers: { responseType: \"blob\" }, cancelToken: source.token })\r\n            .then(({ data }) => { \r\n                console.log(data);\r\n                setVideo(data);\r\n            })\r\n            .catch( e => {\r\n                if( axios.isCancel(e) ) return;\r\n                alert(e);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        axiosVideo();\r\n        return () => source.cancel();\r\n    }, [])\r\n\r\n    // 비디오 클릭\r\n    const onClickVideoBar = ({ target }) => {\r\n        console.log(target.currentTime);\r\n\r\n    }\r\n\r\n    return <Box width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n        <Box flex={1} maxWidth=\"90rem\" margin=\"1.5rem\" display=\"flex\">\r\n            <Box flex={1}>\r\n                <Box width=\"100%\" paddingTop=\"calc(100% * 9 / 16)\" bgcolor=\"black\" position=\"relative\" marginBottom=\"1rem\">\r\n                    <video controls\r\n                        preload=\"false\" onClick={onClickVideoBar}\r\n                        style={{ position: \"absolute\", top: 0, width: \"100%\", height: \"100%\" }}\r\n                        key={video.video && `/api/video/get-video/${video.video}`}>\r\n                        <source src={video.video && `/api/video/get-video/${video.video}`} type=\"video/mp4\" />\r\n                        지원을 안하면 등장함\r\n                    </video>\r\n                </Box>\r\n                <Box color=\"blue\" fontSize=\"0.85rem\">태그</Box>\r\n                <Box fontSize=\"1.2rem\">{ video.title }</Box>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\"\r\n                    fontSize=\"0.85rem\" borderBottom={1} borderColor=\"#d0d0d0\">\r\n                    <Box fontWeight=\"600\" color=\"#777777\">{ video.writedAt && video.writedAt.slice(0,10) }</Box>\r\n                    <Box>\r\n                        <IconButton style={{ fontSize: \"1rem\", fontWeight: \"600\" }}>\r\n                            <AiFillLike size=\"1.5rem\"/>{\"1\"}\r\n                        </IconButton>\r\n                        <IconButton style={{ fontSize: \"1rem\", fontWeight: \"600\" }}>\r\n                            <AiFillDislike size=\"1.5rem\"/>{\"2\"}\r\n                        </IconButton>\r\n                    </Box>\r\n                </Box>\r\n                <Box borderBottom={1} borderColor=\"#d0d0d0\" paddingTop=\"1rem\" paddingBottom=\"1rem\">\r\n                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Box display=\"flex\" alignItems=\"center\" marginBottom=\"0.8rem\">\r\n                            <Box width=\"3rem\" height=\"3rem\" border={1} borderRadius=\"1.5rem\" overflow=\"hidden\" marginRight=\"1rem\">\r\n                                <img style={{ maxWidth: \"3rem\", maxHeight: \"3rem\" }} />\r\n                            </Box>\r\n                            <Box>\r\n                                <Box fontSize=\"0.9rem\">채널명</Box>\r\n                                <Box fontSize=\"0.7rem\" fontWeight=\"600\" color=\"#777777\">구독자 수</Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box>\r\n                            <CustomButton onClick={null}>구독</CustomButton>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box paddingLeft=\"4rem\">\r\n                    { video.description }\r\n                    </Box>\r\n                </Box>\r\n                <Box marginTop=\"1rem\">\r\n                    <Box>댓글 1개</Box>\r\n                </Box>\r\n            </Box>\r\n            <Box display=\"flex\" flexDirection=\"column\" width=\"20rem\" marginLeft=\"1.5rem\" >\r\n                <Box display=\"flex\">\r\n                    <Box bgcolor=\"black\" width=\"10.4rem\" height=\"5.85rem\"\r\n                        display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                        <img />\r\n                    </Box>\r\n                    <Box fontSize=\"0.85rem\" marginLeft=\"0.3rem\" color=\"#707070\">\r\n                        <Box fontSize=\"1rem\" color=\"black\">타이틀</Box>\r\n                        <Box>작성자</Box>\r\n                        <Box>조회수, 작성일</Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            {/* <ReactPlayer controls url={video.video && `/api/video/get-video/${video.video}`} />\r\n            <Box>비디오 페이지</Box> */}\r\n        </Box>\r\n    </Box> \r\n}\r\n\r\nexport default VideoPage;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\CustomButton\\CustomButton.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\SignIn.js",["115","116","117","118"],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignUp\\SignUp.js",["119","120","121"],"import { Box, Button, Grid, TextField } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useReducer } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Logo from \"../../sources/google_logo.jpg\";\r\nimport { CHANGE_DATA } from \"../Home/reducers/HomeReducer\";\r\nimport { CHANGE_DATA_STRUCT, signUpDefault, signUpReducer } from \"./reducers/SignUpReducer\";\r\n\r\nconst SignUp = ({ history }) => {\r\n    const source = axios.CancelToken.source();\r\n\r\n    const [ state, dispatch ] = useReducer(signUpReducer, signUpDefault);\r\n    const { isLoading, isError, signUp } = state;\r\n\r\n    const onChangeInput = ({ currentTarget: { value, id }}) => dispatch({ type: CHANGE_DATA_STRUCT, target: \"signUp\", data: { [id]: value } });\r\n    const createTextField = (placeholder, value, id, type=\"text\") => \r\n        <TextField value={value} type={type} id={id} onChange={onChangeInput} variant=\"outlined\" size=\"small\" fullWidth placeholder={placeholder} />\r\n\r\n    // 에러 타입 확인\r\n    const errorType = () => {\r\n        switch (isError) {\r\n            case 100:\r\n                return \"비밀번호가 일치하지 않습니다. 다시 확인하세요.\";\r\n            // case 401:\r\n            //     return \"잘못된 비밀번호입니다. 다시 확인하세요.\";\r\n            case 401:\r\n                return \"서버에 오류가 발생하였습니다. 잠시 후 다시 시도해주세요.\"\r\n            case 404:\r\n                return \"이미 존재하는 사용자 Email 입니다.\";   \r\n            case 500:\r\n                return \"인터넷에 연결되어 있는지 확인한 후 다시 시도해보세요.\";\r\n            default:\r\n                return \"알 수 없는 오류입니다. 잠시 후 다시 시도해주세요.\";\r\n                // throw new Error(\"cant find error type\");\r\n        }\r\n    }\r\n    \r\n    const onClickSubmit = () => {\r\n        const { passwordCheck, ...others } = signUp;\r\n        if( others.password !== passwordCheck ) return dispatch({ type: CHANGE_DATA, data: { isError: 100 }})\r\n\r\n        dispatch({ type: CHANGE_DATA, data: { isLoading: true }});\r\n        axios.post('/api/identify/sign-up', others, { cancelToken: source.token })\r\n            .then(() => {\r\n                // 회원가입여부 처리함\r\n                history.push('/identify');\r\n            })\r\n            .catch( e => {\r\n                if(axios.isCancel(e)) return;\r\n                console.log(e.response);\r\n                if( e.response ) { // 네트워크 오류 검사\r\n                    dispatch({ type: CHANGE_DATA, data: {\r\n                        isLoading: false,\r\n                        isError: e.response.status,\r\n                    }})\r\n                }\r\n                else {\r\n                    dispatch({ type: CHANGE_DATA, data: {\r\n                        isLoading: false,\r\n                        isError: 500,\r\n                    }})\r\n                }\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => source.cancel();\r\n    }, [])\r\n\r\n    return <Box width=\"100vw\" height=\"100vh\"\r\n        display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n        <Box width=\"40rem\" padding=\"2rem\" paddingTop=\"3rem\" paddingBottom=\"3rem\"\r\n            border={1} borderColor=\"#999999\" borderRadius=\"0.5rem\"\r\n            display=\"flex\" alignItems=\"center\">\r\n            <Box flex={7} display=\"flex\" flexDirection=\"column\">\r\n                <img src={Logo} style={{ maxWidth: \"7rem\" }} />\r\n                <Box fontSize=\"1.4rem\" fontWeight=\"600\" >YouTube Clone 계정 만들기</Box>\r\n                <Box fontSize=\"1rem\" fontWeight=\"500\" marginTop=\"0.5rem\" marginBottom=\"2rem\">\r\n                    <Link to='/' style={{ textDecoration: \"none\", color: \"#777777\" }}>Youtube Clone으로 이동</Link>\r\n                </Box>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={6}>\r\n                        { createTextField(\"성\", signUp.firstName, \"firstName\") }\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        { createTextField(\"이름\", signUp.lastName, \"lastName\") }\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        { createTextField(\"이메일 주소\", signUp.email, \"email\", \"email\") }\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        { createTextField(\"비밀번호\", signUp.password, \"password\", \"password\") }\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        { createTextField(\"확인\", signUp.passwordCheck, \"passwordCheck\", \"password\") }\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Box marginLeft=\"1rem\" fontSize=\"0.8rem\" color=\"#777777\">\r\n                            문자, 숫자, 기호를 조합하여 8자 이상을 사용하세요\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Box height=\"0.8rem\" marginTop=\"2rem\" textAlign=\"center\" fontSize=\"0.8rem\" fontWeight=\"600\" color=\"red\">\r\n                    { isError ? errorType() : ''  }\r\n                </Box>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" marginTop=\"2rem\">\r\n                    <Link to=\"/identify/sign-in\" style={{ textDecoration: \"none\", color: \"blue\" }}>로그인 창으로</Link>\r\n                    <Button onClick={onClickSubmit} variant=\"contained\" color=\"primary\">가입</Button>\r\n                </Box>\r\n            </Box>\r\n            <Box flex={5} display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n                <Box fontSize=\"1.2rem\" fontWeight=\"600\">- Youtube Clone -</Box>\r\n                <Box fontSize=\"0.8rem\" color=\"#777777\">created by 최현수</Box>\r\n                <Box marginTop=\"1rem\">REACT / NESTJS / TYPEORM</Box>\r\n            </Box>\r\n        </Box>\r\n        {/* <Box>회원가입</Box> */}\r\n    </Box>\r\n}\r\n\r\nexport default SignUp;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\frames\\IdentifyFrame.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignUp\\reducers\\SignUpReducer.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\reducers\\SignInReducer.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"122","replacedBy":"128"},{"ruleId":"124","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":19},{"ruleId":"130","severity":1,"message":"134","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":13},{"ruleId":"130","severity":1,"message":"135","line":51,"column":11,"nodeType":"132","messageId":"133","endLine":51,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":66,"column":8,"nodeType":"138","endLine":66,"endColumn":10,"suggestions":"139"},{"ruleId":"130","severity":1,"message":"140","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":15},{"ruleId":"130","severity":1,"message":"141","line":3,"column":17,"nodeType":"132","messageId":"133","endLine":3,"endColumn":23},{"ruleId":"130","severity":1,"message":"142","line":1,"column":40,"nodeType":"132","messageId":"133","endLine":1,"endColumn":48},{"ruleId":"130","severity":1,"message":"143","line":12,"column":13,"nodeType":"132","messageId":"133","endLine":12,"endColumn":22},{"ruleId":"136","severity":1,"message":"144","line":32,"column":8,"nodeType":"138","endLine":32,"endColumn":10,"suggestions":"145"},{"ruleId":"130","severity":1,"message":"134","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":13},{"ruleId":"136","severity":1,"message":"146","line":29,"column":8,"nodeType":"138","endLine":29,"endColumn":10,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":67,"column":33,"nodeType":"150","endLine":67,"endColumn":88},{"ruleId":"148","severity":1,"message":"149","line":90,"column":25,"nodeType":"150","endLine":90,"endColumn":32},{"ruleId":"130","severity":1,"message":"142","line":2,"column":29,"nodeType":"132","messageId":"133","endLine":2,"endColumn":37},{"ruleId":"130","severity":1,"message":"143","line":11,"column":13,"nodeType":"132","messageId":"133","endLine":11,"endColumn":22},{"ruleId":"130","severity":1,"message":"151","line":11,"column":24,"nodeType":"132","messageId":"133","endLine":11,"endColumn":31},{"ruleId":"148","severity":1,"message":"149","line":25,"column":18,"nodeType":"150","endLine":25,"endColumn":65},{"ruleId":"130","severity":1,"message":"143","line":14,"column":13,"nodeType":"132","messageId":"133","endLine":14,"endColumn":22},{"ruleId":"136","severity":1,"message":"137","line":69,"column":8,"nodeType":"138","endLine":69,"endColumn":10,"suggestions":"152"},{"ruleId":"148","severity":1,"message":"149","line":77,"column":17,"nodeType":"150","endLine":77,"endColumn":64},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],["153"],["154"],["153"],["154"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'axiosUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'source'. Either include it or remove the dependency array.","ArrayExpression",["155"],"'Route' is defined but never used.","'Router' is defined but never used.","'useState' is defined but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'axiosVideos' and 'source'. Either include them or remove the dependency array.",["156"],"React Hook useEffect has missing dependencies: 'axiosVideo' and 'source'. Either include them or remove the dependency array.",["157"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isError' is assigned a value but never used.",["158"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"159","fix":"165"},"Update the dependencies array to be: [source]",{"range":"166","text":"167"},"Update the dependencies array to be: [axiosVideos, source]",{"range":"168","text":"169"},"Update the dependencies array to be: [axiosVideo, source]",{"range":"170","text":"171"},{"range":"172","text":"167"},[2151,2153],"[source]",[1058,1060],"[axiosVideos, source]",[919,921],"[axiosVideo, source]",[2760,2762]]
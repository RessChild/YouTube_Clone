[{"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\index.js":"1","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\App.js":"2","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\reportWebVitals.js":"3","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\index.js":"4","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\reportWebVitals.js":"5","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\App.js":"6","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\frames\\VideoFrame.js":"7","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\router.js":"8","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\SideItem\\SideItem.js":"9","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Empty\\Empty.js":"10","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Home\\Home.js":"11","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Home\\reducers\\HomeReducer.js":"12","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\VideoForm\\VideoForm.js":"13","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Add\\Add.js":"14","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\VideoPage\\VideoPage.js":"15","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\CustomButton\\CustomButton.js":"16","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\SignIn.js":"17","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignUp\\SignUp.js":"18","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\frames\\IdentifyFrame.js":"19","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignUp\\reducers\\SignUpReducer.js":"20","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\reducers\\SignInReducer.js":"21","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\signInRouter.js":"22","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\pages\\EmailPage.js":"23","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\pages\\PasswordPage.js":"24","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\ProfileMenu\\ProfileMenu.js":"25","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\ProfileMenu\\data\\menuList.js":"26"},{"size":500,"mtime":1609393954129,"results":"27","hashOfConfig":"28"},{"size":944,"mtime":1609401996152,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1609393954129,"results":"30","hashOfConfig":"28"},{"size":517,"mtime":1612334429015,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1612334429015,"results":"33","hashOfConfig":"32"},{"size":942,"mtime":1613721199666,"results":"34","hashOfConfig":"32"},{"size":4765,"mtime":1614934260930,"results":"35","hashOfConfig":"32"},{"size":2175,"mtime":1613720415455,"results":"36","hashOfConfig":"32"},{"size":896,"mtime":1613632433235,"results":"37","hashOfConfig":"32"},{"size":173,"mtime":1612434881152,"results":"38","hashOfConfig":"32"},{"size":1437,"mtime":1612769537833,"results":"39","hashOfConfig":"32"},{"size":400,"mtime":1612505482554,"results":"40","hashOfConfig":"32"},{"size":1855,"mtime":1615279782672,"results":"41","hashOfConfig":"32"},{"size":2425,"mtime":1615278840737,"results":"42","hashOfConfig":"32"},{"size":4961,"mtime":1615280582976,"results":"43","hashOfConfig":"32"},{"size":315,"mtime":1613636464050,"results":"44","hashOfConfig":"32"},{"size":2301,"mtime":1614835739112,"results":"45","hashOfConfig":"32"},{"size":6082,"mtime":1614668378239,"results":"46","hashOfConfig":"32"},{"size":717,"mtime":1614058137880,"results":"47","hashOfConfig":"32"},{"size":772,"mtime":1614068456431,"results":"48","hashOfConfig":"32"},{"size":754,"mtime":1614759690165,"results":"49","hashOfConfig":"32"},{"size":375,"mtime":1614670821758,"results":"50","hashOfConfig":"32"},{"size":2639,"mtime":1614835875506,"results":"51","hashOfConfig":"32"},{"size":3484,"mtime":1614836673858,"results":"52","hashOfConfig":"32"},{"size":3528,"mtime":1617009534968,"results":"53","hashOfConfig":"32"},{"size":368,"mtime":1617010058182,"results":"54","hashOfConfig":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1bdsnzj",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"1b3pixo",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"65"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"65"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"65"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"65"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"65"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"65"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\index.js",[],["121","122"],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\App.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\reportWebVitals.js",[],["123","124"],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\index.js",[],["125","126"],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\reportWebVitals.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\App.js",["127","128"],"import './App.css';\r\nimport { useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Redirect, Route, BrowserRouter, Switch } from \"react-router-dom\";\r\n\r\nimport VideoFrame from './frames/VideoFrame';\r\nimport IdentifyFrame from \"./frames/IdentifyFrame\";\r\n\r\nfunction App() {\r\n\r\n  // useEffect(() => {\r\n  //   // 일반 경로 테스트\r\n  //   axios.get('/example')\r\n  //     .then( ({ data }) => console.log(\"example test:\", data) )\r\n  //     .catch( e => console.log(e) );\r\n\r\n  //   // DB 연동 테스트\r\n  //   axios.get('/example/database')\r\n  //     .then( ({ data }) => console.log(\"database test:\", data) )\r\n  //     .catch( e => console.log(e) );\r\n  // }, [])\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/identify\" component={IdentifyFrame} />\r\n        <Route path=\"/\" component={VideoFrame} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\frames\\VideoFrame.js",["129","130","131"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Box, Divider, IconButton } from \"@material-ui/core\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\n\r\nimport SideItem from \"../components/SideItem/SideItem\";\r\n\r\nimport { PrivateRoute, PublicRoute, TestRoute, TotalRoute } from \"../router\";\r\n\r\nimport { IoReorderThreeOutline } from \"react-icons/io5\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport { FaUserCircle } from \"react-icons/fa\";\r\nimport Logo from \"../sources/youtube_logo.svg\";import CustomButton from \"../components/CustomButton/CustomButton\";\r\nimport ProfileMenu from \"../components/ProfileMenu/ProfileMenu\";\r\n;\r\n\r\nconst VideoFrame = ({ location, history }) => {\r\n    // location.pathname 으로 색을 결정\r\n    const { pathname } = location;\r\n    const source = axios.CancelToken.source();\r\n\r\n    const [ userInfo, setUserInfo ] = useState(); \r\n\r\n    const viewRoute = () => {\r\n        return <Switch>\r\n            { TotalRoute.map( ({ classify, path, component }, idx) => <Route key={`route-${idx}`} path={`${classify}${path}`} exact component={component} /> ) }\r\n        </Switch>\r\n    }\r\n\r\n    const createMenuList = (routes) => {\r\n        return <Box marginTop=\"0.7rem\" marginBottom=\"0.7rem\">\r\n            { routes.map( (route, idx) => <SideItem key={`menu-${idx}`} route={route} mode={sidebar} selected={ pathname === route.classify+route.path }/> ) }\r\n        </Box>\r\n    }\r\n\r\n    // 좌측 사이드바 온오프\r\n    const [ sidebar, setSidebar ] = useState(true);\r\n    const onClickSidebar = () => setSidebar(!sidebar);\r\n\r\n    // 상단 폼 동작기능\r\n    const [ search, setSearch ] = useState('');\r\n\r\n    // 검색기능\r\n    const onChangeSearch = ({ currentTarget: { value }}) => setSearch(value);\r\n    const onClickSearch = () => {\r\n      alert(\"검색기능\");\r\n    }\r\n    \r\n    // 프로필 관련\r\n    const onClickLogin = () => { // 로그인 기능\r\n      history.push('/identify/sign-in');\r\n    }\r\n\r\n    const axiosUser = () => {\r\n      axios.post('/api/', {}, { cancelToken: source.token })\r\n        .then()\r\n        .catch( e => {\r\n          if(axios.isCancel(e)) return;\r\n          alert(e);\r\n        })\r\n    };\r\n\r\n    const onClickLogo = () => history.push('/');\r\n\r\n    useEffect(() => {\r\n      const storage = localStorage.getItem('userInfo');\r\n      if( storage ) setUserInfo(JSON.parse(storage));\r\n      return () => {\r\n        source.cancel();\r\n      }\r\n    }, [])\r\n\r\n    return (\r\n      <Box width=\"100vw\" height=\"100vh\" display=\"flex\" flexDirection=\"column\" bgcolor=\"#f2f2f2\">\r\n          <Box id=\"header\" height=\"3.7rem\" bgcolor=\"white\" //style={{ opacity: \"90%\" }}\r\n            display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" paddingLeft=\"1rem\" paddingRight=\"1rem\">\r\n            <Box id=\"header-side-onoff\" display=\"flex\" width=\"10rem\" justifyContent=\"space-between\">\r\n                <IconButton size=\"small\" onClick={onClickSidebar}><IoReorderThreeOutline size=\"1.8rem\"/></IconButton>\r\n                <img alt=\"youtube logo\" src={Logo} style={{ width: \"6rem\", cursor: \"pointer\" }} onClick={onClickLogo}/>\r\n            </Box>\r\n            <Box id=\"header-search-bar\" maxWidth=\"40rem\" flex={1} display=\"flex\" alignItems=\"center\">\r\n                <input placeholder=\"검색\" value={search} onChange={onChangeSearch}\r\n                  style={{ fontSize: \"1rem\", padding: \"0.15rem 0.3rem\", flex: \"1\" }} />\r\n                <button onClick={onClickSearch}\r\n                  style={{ cursor: \"pointer\", border: \"1px #666666 solid\", borderLeft: \"0\", background: \"#eeeeee\", width: \"4rem\", height: \"1.65rem\", color: \"#666666\" }}>\r\n                  <AiOutlineSearch size=\"1rem\"/>\r\n                </button>\r\n            </Box>\r\n            <Box id=\"header-user\">\r\n              { userInfo\r\n                ? <ProfileMenu userInfo={userInfo} />\r\n                : <CustomButton onClick={onClickLogin}>\r\n                    <FaUserCircle size=\"1.5rem\"/>\r\n                    <Box marginLeft=\"0.5rem\">로그인</Box>\r\n                  </CustomButton>\r\n              }\r\n            </Box>\r\n          </Box>\r\n          <Box flex={1} display=\"flex\" overflow=\"auto\">\r\n              <Box id=\"side-bar\" bgcolor=\"#f7f7f7\" width={ sidebar ? \"15.3rem\" : \"4.5rem\" } \r\n                display=\"flex\" flexDirection=\"column\" overflow=\"auto\">\r\n                { createMenuList(PublicRoute) }\r\n                <Divider />\r\n                { createMenuList(PrivateRoute) }\r\n                <Divider />\r\n                { createMenuList(TestRoute) }\r\n              </Box>\r\n              <Box id=\"page-view\" flex={1} padding=\"auto\">\r\n                { viewRoute() }\r\n              </Box>\r\n          </Box>\r\n      </Box>\r\n    );\r\n};\r\n\r\nexport default VideoFrame;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\router.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\SideItem\\SideItem.js",["132","133"],"import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Route, Router, useHistory } from \"react-router-dom\";\r\n\r\nconst MenuItem = ({ route, selected, mode }) => {\r\n\r\n    const history = useHistory();\r\n    const { classify, path, name } = route;\r\n\r\n    const onClickItem = () => {\r\n        // alert(\"응애응애\")\r\n        history.push(`${classify}${path}`);\r\n    }\r\n\r\n    return <Box height=\"2.5rem\" onClick={onClickItem} style={{ cursor: \"pointer\" }}\r\n        bgcolor={ (mode && selected) ? \"#c5c5c5\" : \"inherit\" } display=\"flex\" alignItems=\"center\" paddingLeft=\"1.5rem\">\r\n        <Box width=\"3rem\" display=\"flex\" alignItems=\"center\">\r\n            <route.icon size=\"1.32rem\" color={ selected ? \"#ff0000\" : \"#505050\" }/>\r\n        </Box>\r\n        { mode && <Box fontSize=\"0.9rem\" color=\"#505050\" fontWeight=\"600\" >{ name }</Box> }\r\n    </Box>\r\n};\r\n\r\nexport default MenuItem;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Empty\\Empty.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Home\\Home.js",["134","135","136"],"import React, { useEffect, useReducer, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\n\r\nimport { CHANGE_DATA, homeInit, homeReducer } from \"./reducers/HomeReducer\";\r\nimport VideoForm from \"../../components/VideoForm/VideoForm\";\r\n\r\nconst Home = () => {\r\n    const source = axios.CancelToken.source();\r\n\r\n    const [ state, dispatch ] = useReducer(homeReducer, homeInit);\r\n    const { isLoading, videos } = state;\r\n\r\n    const axiosVideos = () => {\r\n        dispatch({ type: CHANGE_DATA, data: { isLoading: true }});\r\n        axios.get('/api/home', { cancelToken: source.token })\r\n            .then(({ data }) => {\r\n                console.log(data);\r\n                dispatch({ type: CHANGE_DATA, data: { isLoading: false, videos: data }});\r\n            })\r\n            .catch( e => {\r\n                if(axios.isCancel(e)) return;\r\n                alert(e);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        axiosVideos();\r\n        return () => {\r\n            source.cancel();\r\n        }\r\n    }, [])\r\n\r\n    return <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" padding=\"1rem\" >\r\n            <Grid container style={{ width: \"100%\", maxWidth: \"92rem\" }}>\r\n            { videos.map( (video, idx) => <VideoForm key={`video-${idx}`} video={video}/> )}\r\n            </Grid>\r\n            <Box bgcolor=\"red\">로딩창</Box>\r\n        </Box>\r\n};\r\n\r\nexport default Home;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Home\\reducers\\HomeReducer.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\VideoForm\\VideoForm.js",["137","138"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\n\r\nimport Thumbnail from \"../../sources/youtube_thumbnail.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst VideoForm = ({ video }) => {\r\n    const { vid, title, description, thumbnail, writer, writedAt } = video;\r\n    const history = useHistory();\r\n\r\n    // 화면 이동\r\n    const onClickVideo = () => {\r\n        history.push(`/${vid}`);\r\n    };\r\n            \r\n    return <Grid onClick={onClickVideo} item xs={6} sm={6} md={3} style={{ padding: \"1rem 0.5rem\" }}>\r\n        <Box style={{ cursor: \"pointer\" }}>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" overflow=\"hidden\" \r\n                bgcolor=\"black\" maxWidth=\"100%\" paddingTop=\"calc(100% * 9 / 16)\" position=\"relative\">\r\n                <Box position=\"absolute\" width=\"100%\" height=\"100%\" top={0} right={0} \r\n                    display=\"flex\" alignItems=\"center\" justifyContent=\"center\" >\r\n                    <img alt=\"video thumbnail\" src={ thumbnail ? `/api/` : Thumbnail } style={{ maxWidth: '100%', maxHeight: \"100%\" }}/>\r\n                </Box>\r\n            </Box>\r\n            <Box display=\"flex\" marginTop=\"0.5rem\">\r\n                <Box width=\"2.4rem\" height=\"2.4rem\" borderRadius=\"1.2rem\" bgcolor=\"gray\" overflow=\"hidden\">\r\n\r\n                </Box>\r\n                <Box display=\"flex\" flexDirection=\"column\" marginLeft=\"0.5rem\">\r\n                    <Box fontSize=\"1.15rem\" fontWeight=\"400\">{ title }</Box>\r\n                    <Box fontSize=\"0.8rem\" color=\"#555555\">{ writer && `${writer.firstName} ${writer.lastName}` }</Box>\r\n                    <Box fontSize=\"0.8rem\" color=\"#555555\">{ writedAt.slice(0,10) }</Box>\r\n                </Box>\r\n            </Box>            \r\n        </Box>\r\n    </Grid>;\r\n};\r\n\r\nexport default VideoForm;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Add\\Add.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\VideoPage\\VideoPage.js",["139","140","141"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Box, IconButton } from \"@material-ui/core\";\r\n\r\nimport { AiFillLike, AiFillDislike } from \"react-icons/ai\";\r\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\r\n\r\n\r\n// 비디오 출력\r\nconst VideoPage = ({ location: { pathname } }) => {\r\n    const source = axios.CancelToken.source();\r\n    const [ video, setVideo ] = useState({});\r\n    const { title, writedAt, writer } = video;\r\n\r\n    const axiosVideo = () => {\r\n        axios.get(`/api/video${pathname}`, { headers: { responseType: \"blob\" }, cancelToken: source.token })\r\n            .then(({ data }) => { \r\n                console.log(data);\r\n                setVideo(data);\r\n            })\r\n            .catch( e => {\r\n                if( axios.isCancel(e) ) return;\r\n                alert(e);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        axiosVideo();\r\n        return () => source.cancel();\r\n    }, [])\r\n\r\n    // 비디오 클릭\r\n    const onClickVideoBar = ({ target }) => {\r\n        console.log(target.currentTime);\r\n\r\n    }\r\n\r\n    return <Box width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n        <Box flex={1} maxWidth=\"90rem\" margin=\"1.5rem\" display=\"flex\">\r\n            <Box flex={1}>\r\n                <Box width=\"100%\" paddingTop=\"calc(100% * 9 / 16)\" bgcolor=\"black\" position=\"relative\" marginBottom=\"1rem\">\r\n                    <video controls\r\n                        preload=\"false\" onClick={onClickVideoBar}\r\n                        style={{ position: \"absolute\", top: 0, width: \"100%\", height: \"100%\" }}\r\n                        key={video.video && `/api/video/get-video/${video.video}`}>\r\n                        <source src={video.video && `/api/video/get-video/${video.video}`} type=\"video/mp4\" />\r\n                        지원을 안하면 등장함\r\n                    </video>\r\n                </Box>\r\n                <Box color=\"blue\" fontSize=\"0.85rem\">태그</Box>\r\n                <Box fontSize=\"1.2rem\">{ title }</Box>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\"\r\n                    fontSize=\"0.85rem\" borderBottom={1} borderColor=\"#d0d0d0\">\r\n                    <Box fontWeight=\"600\" color=\"#777777\">{ writedAt && writedAt.slice(0,10) }</Box>\r\n                    <Box>\r\n                        <IconButton style={{ fontSize: \"1rem\", fontWeight: \"600\" }}>\r\n                            <AiFillLike size=\"1.5rem\"/>{\"1\"}\r\n                        </IconButton>\r\n                        <IconButton style={{ fontSize: \"1rem\", fontWeight: \"600\" }}>\r\n                            <AiFillDislike size=\"1.5rem\"/>{\"2\"}\r\n                        </IconButton>\r\n                    </Box>\r\n                </Box>\r\n                <Box borderBottom={1} borderColor=\"#d0d0d0\" paddingTop=\"1rem\" paddingBottom=\"1rem\">\r\n                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Box display=\"flex\" alignItems=\"center\" marginBottom=\"0.8rem\">\r\n                            <Box width=\"3rem\" height=\"3rem\" border={1} borderRadius=\"1.5rem\" overflow=\"hidden\" marginRight=\"1rem\">\r\n                                <img style={{ maxWidth: \"3rem\", maxHeight: \"3rem\" }} />\r\n                            </Box>\r\n                            <Box>\r\n                                <Box fontSize=\"0.9rem\">{ writer && `${writer.firstName} ${writer.lastName}`  }</Box>\r\n                                <Box fontSize=\"0.7rem\" fontWeight=\"600\" color=\"#777777\">구독자 수</Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box>\r\n                            <CustomButton onClick={null}>구독</CustomButton>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box paddingLeft=\"4rem\">\r\n                    { video.description }\r\n                    </Box>\r\n                </Box>\r\n                <Box marginTop=\"1rem\">\r\n                    <Box>댓글 1개</Box>\r\n                </Box>\r\n            </Box>\r\n            <Box display=\"flex\" flexDirection=\"column\" width=\"20rem\" marginLeft=\"1.5rem\" >\r\n                <Box display=\"flex\">\r\n                    <Box bgcolor=\"black\" width=\"10.4rem\" height=\"5.85rem\"\r\n                        display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                        <img />\r\n                    </Box>\r\n                    <Box fontSize=\"0.85rem\" marginLeft=\"0.3rem\" color=\"#707070\">\r\n                        <Box fontSize=\"1rem\" color=\"black\">타이틀</Box>\r\n                        <Box>작성자</Box>\r\n                        <Box>조회수, 작성일</Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            {/* <ReactPlayer controls url={video.video && `/api/video/get-video/${video.video}`} />\r\n            <Box>비디오 페이지</Box> */}\r\n        </Box>\r\n    </Box> \r\n}\r\n\r\nexport default VideoPage;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\CustomButton\\CustomButton.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\SignIn.js",["142","143","144","145","146","147","148","149"],"import { Box, Button, LinearProgress, TextField } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useReducer, useState } from \"react\";\r\nimport { Link, Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Logo from \"../../sources/google_logo.jpg\";\r\nimport { CHANGE_DATA, CHANGE_DATA_STRUCT, signInDefault, signInReducer } from \"./reducers/SignInReducer\";\r\nimport { signInRoute, singInDefaultRoute } from \"./signInRouter\";\r\n\r\nconst SignIn = ({ history }) => {\r\n    // const source = axios.CancelToken.source();\r\n\r\n    const [ state, dispatch ] = useReducer(signInReducer, signInDefault);\r\n    const { isLoading, isError, mode, signIn } = state;\r\n\r\n    // useEffect(() => {\r\n    //     return () => source.cancel();\r\n    // }, [])\r\n\r\n    const routeComponent = {\r\n        signIn,\r\n        dispatch,\r\n        CHANGE_DATA: CHANGE_DATA,\r\n        CHANGE_DATA_STRUCT: CHANGE_DATA_STRUCT,\r\n    }\r\n\r\n    const createRoute = () => {\r\n        return <Switch>\r\n            {\r\n                signInRoute.map( (route, idx) =>\r\n                    <Route key={`sign-in-${idx}`} path={route.path} render={() => <route.component { ...routeComponent } />} />)\r\n            }\r\n            <Redirect to={singInDefaultRoute} />\r\n        </Switch>;\r\n    }\r\n\r\n    useEffect(() => {\r\n        history.replace(`/identify/sign-in/${mode}`)\r\n    }, [mode])\r\n\r\n    return <Box width=\"100vw\" height=\"100vh\"\r\n        display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n        {/* <Box position=\"absolute\" top=\"0\" bgcolor=\"blue\">ㅇㅅㅇ</Box> */}\r\n        <Box width=\"24rem\" height=\"28rem\" padding=\"2rem\" paddingTop=\"3rem\" paddingBottom=\"3rem\"\r\n            border={1} borderColor=\"#999999\" borderRadius=\"0.5rem\" textAlign=\"center\"\r\n            position=\"relative\">\r\n            { isLoading && \r\n                <Box position=\"absolute\" display=\"flex\" flexDirection=\"column\" top={0} left={0} width=\"100%\" height=\"100%\">\r\n                    <LinearProgress />\r\n                    <Box flex={1} bgcolor=\"#9f9f9f\" style={{ opacity: \"30%\" }} zIndex={1}></Box>\r\n                </Box> \r\n            }\r\n            <Box><img src={Logo} style={{ maxWidth: \"7rem\" }} /></Box>\r\n            { createRoute() }\r\n        </Box>\r\n    </Box>\r\n}\r\n\r\nexport default SignIn;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignUp\\SignUp.js",["150","151","152"],"import { Box, Button, Grid, TextField } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useReducer } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Logo from \"../../sources/google_logo.jpg\";\r\nimport { CHANGE_DATA } from \"../Home/reducers/HomeReducer\";\r\nimport { CHANGE_DATA_STRUCT, signUpDefault, signUpReducer } from \"./reducers/SignUpReducer\";\r\n\r\nconst SignUp = ({ history }) => {\r\n    const source = axios.CancelToken.source();\r\n\r\n    const [ state, dispatch ] = useReducer(signUpReducer, signUpDefault);\r\n    const { isLoading, isError, signUp } = state;\r\n\r\n    const onChangeInput = ({ currentTarget: { value, id }}) => dispatch({ type: CHANGE_DATA_STRUCT, target: \"signUp\", data: { [id]: value } });\r\n    const createTextField = (placeholder, value, id, type=\"text\") => \r\n        <TextField value={value} type={type} id={id} onChange={onChangeInput} variant=\"outlined\" size=\"small\" fullWidth placeholder={placeholder} />\r\n\r\n    // 에러 타입 확인\r\n    const errorType = () => {\r\n        switch (isError) {\r\n            case 100:\r\n                return \"비밀번호가 일치하지 않습니다. 다시 확인하세요.\";\r\n            // case 401:\r\n            //     return \"잘못된 비밀번호입니다. 다시 확인하세요.\";\r\n            case 401:\r\n                return \"서버에 오류가 발생하였습니다. 잠시 후 다시 시도해주세요.\"\r\n            case 404:\r\n                return \"이미 존재하는 사용자 Email 입니다.\";   \r\n            case 500:\r\n                return \"인터넷에 연결되어 있는지 확인한 후 다시 시도해보세요.\";\r\n            default:\r\n                return \"알 수 없는 오류입니다. 잠시 후 다시 시도해주세요.\";\r\n                // throw new Error(\"cant find error type\");\r\n        }\r\n    }\r\n    \r\n    const onClickSubmit = () => {\r\n        const { passwordCheck, ...others } = signUp;\r\n        if( others.password !== passwordCheck ) return dispatch({ type: CHANGE_DATA, data: { isError: 100 }})\r\n\r\n        dispatch({ type: CHANGE_DATA, data: { isLoading: true }});\r\n        axios.post('/api/identify/sign-up', others, { cancelToken: source.token })\r\n            .then(() => {\r\n                // 회원가입여부 처리함\r\n                history.push('/identify');\r\n            })\r\n            .catch( e => {\r\n                if(axios.isCancel(e)) return;\r\n                console.log(e.response);\r\n                if( e.response ) { // 네트워크 오류 검사\r\n                    dispatch({ type: CHANGE_DATA, data: {\r\n                        isLoading: false,\r\n                        isError: e.response.status,\r\n                    }})\r\n                }\r\n                else {\r\n                    dispatch({ type: CHANGE_DATA, data: {\r\n                        isLoading: false,\r\n                        isError: 500,\r\n                    }})\r\n                }\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => source.cancel();\r\n    }, [])\r\n\r\n    return <Box width=\"100vw\" height=\"100vh\"\r\n        display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n        <Box width=\"40rem\" padding=\"2rem\" paddingTop=\"3rem\" paddingBottom=\"3rem\"\r\n            border={1} borderColor=\"#999999\" borderRadius=\"0.5rem\"\r\n            display=\"flex\" alignItems=\"center\" position=\"relative\">\r\n            <Box flex={7} display=\"flex\" flexDirection=\"column\">\r\n                <img src={Logo} style={{ maxWidth: \"7rem\" }} />\r\n                <Box fontSize=\"1.4rem\" fontWeight=\"600\" >YouTube Clone 계정 만들기</Box>\r\n                <Box fontSize=\"1rem\" fontWeight=\"500\" marginTop=\"0.5rem\" marginBottom=\"2rem\">\r\n                    <Link to='/' style={{ textDecoration: \"none\", color: \"#777777\" }}>Youtube Clone으로 이동</Link>\r\n                </Box>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={6}>\r\n                        { createTextField(\"성\", signUp.firstName, \"firstName\") }\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        { createTextField(\"이름\", signUp.lastName, \"lastName\") }\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        { createTextField(\"이메일 주소\", signUp.email, \"email\", \"email\") }\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        { createTextField(\"비밀번호\", signUp.password, \"password\", \"password\") }\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        { createTextField(\"확인\", signUp.passwordCheck, \"passwordCheck\", \"password\") }\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Box marginLeft=\"1rem\" fontSize=\"0.8rem\" color=\"#777777\">\r\n                            문자, 숫자, 기호를 조합하여 8자 이상을 사용하세요\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Box height=\"0.8rem\" marginTop=\"2rem\" textAlign=\"center\" fontSize=\"0.8rem\" fontWeight=\"600\" color=\"red\">\r\n                    { isError ? errorType() : ''  }\r\n                </Box>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" marginTop=\"2rem\">\r\n                    <Link to=\"/identify/sign-in\" style={{ textDecoration: \"none\", color: \"blue\" }}>로그인 창으로</Link>\r\n                    <Button onClick={onClickSubmit} variant=\"contained\" color=\"primary\">가입</Button>\r\n                </Box>\r\n            </Box>\r\n            <Box flex={5} display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n                <Box fontSize=\"1.2rem\" fontWeight=\"600\">- Youtube Clone -</Box>\r\n                <Box fontSize=\"0.8rem\" color=\"#777777\">created by 최현수</Box>\r\n                <Box marginTop=\"1rem\">REACT / NESTJS / TYPEORM</Box>\r\n            </Box>\r\n        </Box>\r\n        {/* <Box>회원가입</Box> */}\r\n    </Box>\r\n}\r\n\r\nexport default SignUp;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\frames\\IdentifyFrame.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignUp\\reducers\\SignUpReducer.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\reducers\\SignInReducer.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\signInRouter.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\pages\\EmailPage.js",["153"],"import { Box, Button, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst EmailPage = ({ signIn, dispatch, CHANGE_DATA, CHANGE_DATA_STRUCT }) => {\r\n\r\n    const source = axios.CancelToken.source();\r\n\r\n    // 입력\r\n    const onChangeInput = ({ currentTarget: { id, value }}) => {\r\n        dispatch({ type: CHANGE_DATA_STRUCT, target: 'signIn', data: { [id]: value } });\r\n    }\r\n\r\n    // 이메일확인 완료\r\n    const onClickSubmit = () => {\r\n        if( !signIn.email ) return; // 빈 칸은 허용x\r\n        dispatch({ type: CHANGE_DATA, data: { isLoading: true }});\r\n        axios.post('/api/identify/sign-in/email', { email: signIn.email }, { cancelToken: source.token })\r\n            .then(({ data }) => {\r\n                if( !data ) {\r\n                    return dispatch({ type: CHANGE_DATA, data: { isLoading: false }});\r\n                }\r\n                dispatch({ type: CHANGE_DATA, data: { mode: 'password', isLoading: false, signIn: { ...signIn, ...data } }});\r\n            })\r\n            .catch( e => {\r\n                if( axios.isCancel(e) ) return;\r\n                dispatch({ type: CHANGE_DATA, data: { isLoading: false }});\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => source.cancel();\r\n    }, [])\r\n\r\n    return <>\r\n        <Box fontSize=\"1.4rem\" fontWeight=\"600\">로그인</Box>\r\n        <Box fontSize=\"1rem\" fontWeight=\"500\" marginTop=\"0.5rem\" marginBottom=\"2rem\">\r\n            <Link to='/' style={{ textDecoration: \"none\", color: \"#777777\" }}>YouTube Clone으로 이동</Link>\r\n        </Box>\r\n        <Box width=\"100%\">\r\n            <TextField type=\"email\" value={signIn.email} id=\"email\" onChange={onChangeInput} variant=\"outlined\" fullWidth label=\"이메일 또는 휴대전화\"/>\r\n            <Box display=\"flex\" marginTop=\"0.5rem\" fontSize=\"0.9rem\">\r\n                <Link style={{ textDecoration: \"none\", color: \"blue\" }}>이메일을 앚으셨나요?</Link>\r\n            </Box>\r\n        </Box>\r\n        <Box height=\"0.8rem\" marginTop=\"2rem\" textAlign=\"center\" fontSize=\"0.8rem\" fontWeight=\"600\" color=\"red\">\r\n            {/* { isError ? errorType() : ''  } */}\r\n        </Box>\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" marginTop=\"3rem\">\r\n            <Link to=\"/identify/sign-up\" style={{ textDecoration: \"none\", color: \"blue\" }}>계정 만들기</Link>\r\n            <Button disabled={!signIn.email} onClick={onClickSubmit} variant=\"contained\" color=\"primary\">다음</Button>\r\n        </Box>\r\n    </>\r\n};\r\n\r\nexport default EmailPage;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\pages\\PasswordPage.js",["154","155"],"import { Box, Button, Checkbox, FormControlLabel, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport Sample from \"../../../sources/sample_img.png\";\r\n\r\nconst PasswordPage = ({ signIn, dispatch, CHANGE_DATA, CHANGE_DATA_STRUCT }) => {\r\n\r\n    const history = useHistory();\r\n    const source = axios.CancelToken.source();\r\n    const [ showPassword, setShowPassword ] = useState(false);\r\n    // 비밀번호 표시 변경\r\n    const handleChange = () => setShowPassword(!showPassword);\r\n\r\n    // 입력\r\n    const onChangeInput = ({ currentTarget: { id, value }}) => {\r\n        dispatch({ type: CHANGE_DATA_STRUCT, target: 'signIn', data: { [id]: value } });\r\n    }\r\n\r\n    const onClickSubmit = () => {\r\n        if( !signIn.password ) return;\r\n        dispatch({ type: CHANGE_DATA, data: { isLoading: true }});\r\n        axios.post('/api/identify/sign-in/password', \r\n            { email: signIn.email, password: signIn.password }, \r\n            { cancelToken: source.token })\r\n            .then(({ data }) => {\r\n                const { password, ...userInfo } = signIn;\r\n                localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\r\n                history.push('/');\r\n            })\r\n            .catch( e => {\r\n                if( axios.isCancel(e) ) return;\r\n                dispatch({ type: CHANGE_DATA, data: { isLoading: false }});\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => source.cancel();\r\n    }, [])\r\n\r\n    return <>\r\n        <Box fontSize=\"1.4rem\" fontWeight=\"600\">{`${signIn.firstName} ${signIn.lastName}`}</Box>\r\n        <Box fontSize=\"0.95rem\" fontWeight=\"500\" marginTop=\"0.5rem\" marginBottom=\"2rem\"\r\n            display=\"flex\" justifyContent=\"center\">\r\n            {/* <Link to='/' style={{ textDecoration: \"none\", color: \"#777777\" }}>YouTube Clone으로 이동</Link> */}\r\n            <Box border={1} borderRadius=\"1rem\" padding=\"0.2rem\" paddingLeft=\"0.5rem\" paddingRight=\"0.5rem\" textAlign=\"left\">\r\n                {/* <Box border={1} borderRadius=\"1rem\" bgcolor=\"gray\" display=\"inline\" marginRight=\"0.5rem\" overflow=\"hidden\">\r\n                    <img src={Sample} style={{ width: \"1rem\", height: \"1rem\" }} />\r\n                </Box> */}\r\n                { signIn.email }\r\n            </Box>\r\n        </Box>\r\n\r\n        <Box width=\"100%\">\r\n            <TextField type={ showPassword ? \"text\" : \"password\" } value={signIn.password} id=\"password\" onChange={onChangeInput} variant=\"outlined\" fullWidth label=\"비밀번호 입력\"/>\r\n            <Box display=\"flex\" marginTop=\"0.5rem\" fontSize=\"0.9rem\">\r\n                <FormControlLabel label=\"비밀번호 표시\"\r\n                    control={<Checkbox checked={showPassword} onChange={handleChange} name=\"passwordHide\" color=\"primary\" />}/>\r\n            </Box>\r\n        </Box>\r\n        <Box height=\"0.8rem\" marginTop=\"2rem\" textAlign=\"center\" fontSize=\"0.8rem\" fontWeight=\"600\" color=\"red\">\r\n            {/* { isError ? errorType() : ''  } */}\r\n        </Box>\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" marginTop=\"3rem\">\r\n            <Link to=\"/\" style={{ textDecoration: \"none\", color: \"blue\" }}>비밀번호 찾기</Link>\r\n            <Button disabled={!signIn.password} onClick={onClickSubmit} variant=\"contained\" color=\"primary\">다음</Button>\r\n        </Box>\r\n    </>\r\n};\r\n\r\nexport default PasswordPage;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\ProfileMenu\\ProfileMenu.js",["156","157","158"],"import { Box, Button, ClickAwayListener, Grow, IconButton, MenuItem, MenuList, Paper, Popper } from \"@material-ui/core\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { menuList } from \"./data/menuList\";\r\n\r\nconst ProfileMenu = ({ userInfo: { firstName, lastName, email } }) => {\r\n    const history = useHistory();\r\n\r\n    const [ open, setOpen ] = useState(false);\r\n    const anchorRef = useRef();\r\n\r\n    const onClickMenu = ({ currentTarget: { id }}) => {\r\n        handleClose();\r\n        console.log(id);\r\n        if( id === \"log-out\" ) localStorage.removeItem('userInfo');\r\n        history.go();\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleListKeyDown = (event) => {\r\n        if (event.key === 'Tab') {\r\n          event.preventDefault();\r\n          setOpen(false);\r\n        }\r\n    }\r\n    \r\n    const onClickButton = () => setOpen(!open);\r\n\r\n    return <Box display=\"flex\">\r\n        <Box paddingLeft=\"1.5rem\" paddingRight=\"1.5rem\" ref={anchorRef}>\r\n            <IconButton onClick={onClickButton}\r\n                style={{ background:\"#7777ff\", borderRadius: \"1rem\", \r\n                border: \"0\", width: \"2rem\", height: \"2rem\", fontSize: \"1rem\",\r\n                textAlign:\"center\", color: \"white\", lineHeight: \"2rem\" }}>\r\n                {`${lastName[0]}`}    \r\n            </IconButton>\r\n            {/* <button onClick={onClickButton}\r\n                style={{ background:\"#7777ff\", borderRadius: \"1rem\", \r\n                border: \"0\", width: \"2rem\", height: \"2rem\",\r\n                textAlign:\"center\", color: \"white\", lineHeight: \"2rem\" }}>\r\n                {`${userInfo.lastName[0]}`}\r\n            </button> */}\r\n        </Box>\r\n        <Popper open={open} anchorEl={anchorRef.current} transition >\r\n            <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                <Box width=\"20rem\" display=\"flex\" flexDirection=\"column\">\r\n                    <Box display=\"flex\" padding=\"1rem\" borderColor=\"#aaaaaa\" borderBottom={1}>\r\n                        <Box width=\"3rem\" height=\"3rem\" bgcolor=\"#7777ff\" borderRadius=\"1.5rem\" \r\n                            textAlign=\"center\" lineHeight=\"3rem\" fontSize=\"1.5rem\" color=\"#ffffff\">\r\n                            {`${lastName[0]}`} \r\n                        </Box>\r\n                        <Box marginLeft=\"1rem\" display=\"flex\" flexDirection=\"column\">\r\n                            <Box height=\"1.5rem\">{ `${firstName}${lastName}` }</Box>\r\n                            <Box height=\"1.5rem\">{email}</Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                        {\r\n                            menuList.map( (menu, idx) => {\r\n                                return <MenuItem key={`menuItem-${idx}`} onClick={onClickMenu} id={menu.id}>\r\n                                        <menu.icon size=\"1.3rem\" />\r\n                                        <Box paddingLeft=\"0.5rem\" fontSize=\"0.9rem\" fontWeight=\"700\">\r\n                                            { menu.text }\r\n                                        </Box>\r\n                                    </MenuItem>\r\n                            })   \r\n                        }\r\n                    </MenuList>\r\n                </Box>\r\n                </ClickAwayListener>\r\n            </Paper>\r\n        </Popper>\r\n    </Box>\r\n};\r\n\r\nexport default ProfileMenu;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\ProfileMenu\\data\\menuList.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"159","replacedBy":"163"},{"ruleId":"161","replacedBy":"164"},{"ruleId":"159","replacedBy":"165"},{"ruleId":"161","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":19},{"ruleId":"167","severity":1,"message":"171","line":3,"column":8,"nodeType":"169","messageId":"170","endLine":3,"endColumn":13},{"ruleId":"167","severity":1,"message":"172","line":4,"column":10,"nodeType":"169","messageId":"170","endLine":4,"endColumn":14},{"ruleId":"167","severity":1,"message":"173","line":54,"column":11,"nodeType":"169","messageId":"170","endLine":54,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":71,"column":8,"nodeType":"176","endLine":71,"endColumn":10,"suggestions":"177"},{"ruleId":"167","severity":1,"message":"178","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":15},{"ruleId":"167","severity":1,"message":"179","line":3,"column":17,"nodeType":"169","messageId":"170","endLine":3,"endColumn":23},{"ruleId":"167","severity":1,"message":"180","line":1,"column":40,"nodeType":"169","messageId":"170","endLine":1,"endColumn":48},{"ruleId":"167","severity":1,"message":"181","line":12,"column":13,"nodeType":"169","messageId":"170","endLine":12,"endColumn":22},{"ruleId":"174","severity":1,"message":"182","line":32,"column":8,"nodeType":"176","endLine":32,"endColumn":10,"suggestions":"183"},{"ruleId":"167","severity":1,"message":"171","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":13},{"ruleId":"167","severity":1,"message":"184","line":9,"column":25,"nodeType":"169","messageId":"170","endLine":9,"endColumn":36},{"ruleId":"174","severity":1,"message":"185","line":30,"column":8,"nodeType":"176","endLine":30,"endColumn":10,"suggestions":"186"},{"ruleId":"187","severity":1,"message":"188","line":68,"column":33,"nodeType":"189","endLine":68,"endColumn":88},{"ruleId":"187","severity":1,"message":"188","line":91,"column":25,"nodeType":"189","endLine":91,"endColumn":32},{"ruleId":"167","severity":1,"message":"190","line":1,"column":15,"nodeType":"169","messageId":"170","endLine":1,"endColumn":21},{"ruleId":"167","severity":1,"message":"191","line":1,"column":39,"nodeType":"169","messageId":"170","endLine":1,"endColumn":48},{"ruleId":"167","severity":1,"message":"171","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":13},{"ruleId":"167","severity":1,"message":"180","line":3,"column":40,"nodeType":"169","messageId":"170","endLine":3,"endColumn":48},{"ruleId":"167","severity":1,"message":"172","line":4,"column":10,"nodeType":"169","messageId":"170","endLine":4,"endColumn":14},{"ruleId":"167","severity":1,"message":"192","line":14,"column":24,"nodeType":"169","messageId":"170","endLine":14,"endColumn":31},{"ruleId":"174","severity":1,"message":"193","line":39,"column":8,"nodeType":"176","endLine":39,"endColumn":14,"suggestions":"194"},{"ruleId":"187","severity":1,"message":"188","line":53,"column":18,"nodeType":"189","endLine":53,"endColumn":65},{"ruleId":"167","severity":1,"message":"181","line":14,"column":13,"nodeType":"169","messageId":"170","endLine":14,"endColumn":22},{"ruleId":"174","severity":1,"message":"175","line":69,"column":8,"nodeType":"176","endLine":69,"endColumn":10,"suggestions":"195"},{"ruleId":"187","severity":1,"message":"188","line":77,"column":17,"nodeType":"189","endLine":77,"endColumn":64},{"ruleId":"174","severity":1,"message":"175","line":34,"column":8,"nodeType":"176","endLine":34,"endColumn":10,"suggestions":"196"},{"ruleId":"167","severity":1,"message":"197","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":14},{"ruleId":"174","severity":1,"message":"175","line":40,"column":8,"nodeType":"176","endLine":40,"endColumn":10,"suggestions":"198"},{"ruleId":"167","severity":1,"message":"190","line":1,"column":15,"nodeType":"169","messageId":"170","endLine":1,"endColumn":21},{"ruleId":"167","severity":1,"message":"199","line":1,"column":42,"nodeType":"169","messageId":"170","endLine":1,"endColumn":46},{"ruleId":"167","severity":1,"message":"172","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":14},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],["200"],["201"],["200"],["201"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Link' is defined but never used.","'axiosUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'source'. Either include it or remove the dependency array.","ArrayExpression",["202"],"'Route' is defined but never used.","'Router' is defined but never used.","'useState' is defined but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'axiosVideos' and 'source'. Either include them or remove the dependency array.",["203"],"'description' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'axiosVideo' and 'source'. Either include them or remove the dependency array.",["204"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'TextField' is defined but never used.","'isError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["205"],["206"],["207"],"'Sample' is defined but never used.",["208"],"'Grow' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"209","fix":"217"},{"desc":"209","fix":"218"},{"desc":"209","fix":"219"},"Update the dependencies array to be: [source]",{"range":"220","text":"221"},"Update the dependencies array to be: [axiosVideos, source]",{"range":"222","text":"223"},"Update the dependencies array to be: [axiosVideo, source]",{"range":"224","text":"225"},"Update the dependencies array to be: [history, mode]",{"range":"226","text":"227"},{"range":"228","text":"221"},{"range":"229","text":"221"},{"range":"230","text":"221"},[2388,2390],"[source]",[1058,1060],"[axiosVideos, source]",[967,969],"[axiosVideo, source]",[1363,1369],"[history, mode]",[2760,2762],[1325,1327],[1556,1558]]
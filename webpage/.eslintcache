[{"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\index.js":"1","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\App.js":"2","D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\reportWebVitals.js":"3","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\index.js":"4","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\reportWebVitals.js":"5","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\App.js":"6","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\frames\\VideoFrame.js":"7","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\router.js":"8","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\SideItem\\SideItem.js":"9","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Empty\\Empty.js":"10","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Home\\Home.js":"11","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Home\\reducers\\HomeReducer.js":"12","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\VideoForm\\VideoForm.js":"13","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Add\\Add.js":"14","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\VideoPage\\VideoPage.js":"15","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\CustomButton\\CustomButton.js":"16","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\SignIn.js":"17","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignUp\\SignUp.js":"18","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\frames\\IdentifyFrame.js":"19","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignUp\\reducers\\SignUpReducer.js":"20","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\reducers\\SignInReducer.js":"21","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\signInRouter.js":"22","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\pages\\EmailPage.js":"23","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\pages\\PasswordPage.js":"24","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\ProfileMenu\\ProfileMenu.js":"25","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\ProfileMenu\\data\\menuList.js":"26","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Upload\\Upload.js":"27","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Upload\\reducers\\UploadReducer.js":"28","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Upload\\pages\\SelectPage.js":"29","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Upload\\uploadRouter.js":"30","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Upload\\pages\\OptionPage.js":"31","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\RedditTextField\\RedditTextField.js":"32"},{"size":500,"mtime":1609393954129,"results":"33","hashOfConfig":"34"},{"size":944,"mtime":1609401996152,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1609393954129,"results":"36","hashOfConfig":"34"},{"size":517,"mtime":1612334429015,"results":"37","hashOfConfig":"38"},{"size":375,"mtime":1612334429015,"results":"39","hashOfConfig":"38"},{"size":942,"mtime":1613721199666,"results":"40","hashOfConfig":"38"},{"size":4882,"mtime":1618903845805,"results":"41","hashOfConfig":"38"},{"size":2201,"mtime":1618293905165,"results":"42","hashOfConfig":"38"},{"size":896,"mtime":1613632433235,"results":"43","hashOfConfig":"38"},{"size":173,"mtime":1612434881152,"results":"44","hashOfConfig":"38"},{"size":1437,"mtime":1612769537833,"results":"45","hashOfConfig":"38"},{"size":400,"mtime":1612505482554,"results":"46","hashOfConfig":"38"},{"size":1861,"mtime":1618293447033,"results":"47","hashOfConfig":"38"},{"size":2425,"mtime":1615278840737,"results":"48","hashOfConfig":"38"},{"size":5044,"mtime":1618293850884,"results":"49","hashOfConfig":"38"},{"size":315,"mtime":1613636464050,"results":"50","hashOfConfig":"38"},{"size":2238,"mtime":1617348719478,"results":"51","hashOfConfig":"38"},{"size":6082,"mtime":1614668378239,"results":"52","hashOfConfig":"38"},{"size":717,"mtime":1614058137880,"results":"53","hashOfConfig":"38"},{"size":772,"mtime":1614068456431,"results":"54","hashOfConfig":"38"},{"size":754,"mtime":1614759690165,"results":"55","hashOfConfig":"38"},{"size":375,"mtime":1614670821758,"results":"56","hashOfConfig":"38"},{"size":2639,"mtime":1614835875506,"results":"57","hashOfConfig":"38"},{"size":3484,"mtime":1614836673858,"results":"58","hashOfConfig":"38"},{"size":3528,"mtime":1617009534968,"results":"59","hashOfConfig":"38"},{"size":368,"mtime":1617010058182,"results":"60","hashOfConfig":"38"},{"size":3771,"mtime":1618294037868,"results":"61","hashOfConfig":"38"},{"size":720,"mtime":1617350963115,"results":"62","hashOfConfig":"38"},{"size":2099,"mtime":1618290842865,"results":"63","hashOfConfig":"38"},{"size":360,"mtime":1617349212128,"results":"64","hashOfConfig":"38"},{"size":1108,"mtime":1618904606089,"results":"65","hashOfConfig":"38"},{"size":1151,"mtime":1618904418718,"results":"66","hashOfConfig":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"1bdsnzj",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"1b3pixo",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"77"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"77"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"77"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"77"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"77"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"77"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"77"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"77"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"77"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\index.js",[],["147","148"],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\App.js",[],"D:\\Visual Studio Code Project\\React-Native\\sns_clone\\webpage\\src\\reportWebVitals.js",[],["149","150"],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\index.js",[],["151","152"],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\reportWebVitals.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\App.js",["153","154"],"import './App.css';\r\nimport { useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Redirect, Route, BrowserRouter, Switch } from \"react-router-dom\";\r\n\r\nimport VideoFrame from './frames/VideoFrame';\r\nimport IdentifyFrame from \"./frames/IdentifyFrame\";\r\n\r\nfunction App() {\r\n\r\n  // useEffect(() => {\r\n  //   // 일반 경로 테스트\r\n  //   axios.get('/example')\r\n  //     .then( ({ data }) => console.log(\"example test:\", data) )\r\n  //     .catch( e => console.log(e) );\r\n\r\n  //   // DB 연동 테스트\r\n  //   axios.get('/example/database')\r\n  //     .then( ({ data }) => console.log(\"database test:\", data) )\r\n  //     .catch( e => console.log(e) );\r\n  // }, [])\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/identify\" component={IdentifyFrame} />\r\n        <Route path=\"/\" component={VideoFrame} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\frames\\VideoFrame.js",["155","156","157"],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\router.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\SideItem\\SideItem.js",["158","159"],"import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Route, Router, useHistory } from \"react-router-dom\";\r\n\r\nconst MenuItem = ({ route, selected, mode }) => {\r\n\r\n    const history = useHistory();\r\n    const { classify, path, name } = route;\r\n\r\n    const onClickItem = () => {\r\n        // alert(\"응애응애\")\r\n        history.push(`${classify}${path}`);\r\n    }\r\n\r\n    return <Box height=\"2.5rem\" onClick={onClickItem} style={{ cursor: \"pointer\" }}\r\n        bgcolor={ (mode && selected) ? \"#c5c5c5\" : \"inherit\" } display=\"flex\" alignItems=\"center\" paddingLeft=\"1.5rem\">\r\n        <Box width=\"3rem\" display=\"flex\" alignItems=\"center\">\r\n            <route.icon size=\"1.32rem\" color={ selected ? \"#ff0000\" : \"#505050\" }/>\r\n        </Box>\r\n        { mode && <Box fontSize=\"0.9rem\" color=\"#505050\" fontWeight=\"600\" >{ name }</Box> }\r\n    </Box>\r\n};\r\n\r\nexport default MenuItem;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Empty\\Empty.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Home\\Home.js",["160","161","162"],"import React, { useEffect, useReducer, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\n\r\nimport { CHANGE_DATA, homeInit, homeReducer } from \"./reducers/HomeReducer\";\r\nimport VideoForm from \"../../components/VideoForm/VideoForm\";\r\n\r\nconst Home = () => {\r\n    const source = axios.CancelToken.source();\r\n\r\n    const [ state, dispatch ] = useReducer(homeReducer, homeInit);\r\n    const { isLoading, videos } = state;\r\n\r\n    const axiosVideos = () => {\r\n        dispatch({ type: CHANGE_DATA, data: { isLoading: true }});\r\n        axios.get('/api/home', { cancelToken: source.token })\r\n            .then(({ data }) => {\r\n                console.log(data);\r\n                dispatch({ type: CHANGE_DATA, data: { isLoading: false, videos: data }});\r\n            })\r\n            .catch( e => {\r\n                if(axios.isCancel(e)) return;\r\n                alert(e);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        axiosVideos();\r\n        return () => {\r\n            source.cancel();\r\n        }\r\n    }, [])\r\n\r\n    return <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" padding=\"1rem\" >\r\n            <Grid container style={{ width: \"100%\", maxWidth: \"92rem\" }}>\r\n            { videos.map( (video, idx) => <VideoForm key={`video-${idx}`} video={video}/> )}\r\n            </Grid>\r\n            <Box bgcolor=\"red\">로딩창</Box>\r\n        </Box>\r\n};\r\n\r\nexport default Home;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Home\\reducers\\HomeReducer.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\VideoForm\\VideoForm.js",["163","164"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\n\r\nimport Thumbnail from \"../../sources/youtube_thumbnail.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst VideoForm = ({ video }) => {\r\n    const { vid, title, description, thumbnail, writer, writedAt } = video;\r\n    const history = useHistory();\r\n\r\n    // 화면 이동\r\n    const onClickVideo = () => {\r\n        history.push(`/video/${vid}`);\r\n    };\r\n            \r\n    return <Grid onClick={onClickVideo} item xs={6} sm={6} md={3} style={{ padding: \"1rem 0.5rem\" }}>\r\n        <Box style={{ cursor: \"pointer\" }}>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" overflow=\"hidden\" \r\n                bgcolor=\"black\" maxWidth=\"100%\" paddingTop=\"calc(100% * 9 / 16)\" position=\"relative\">\r\n                <Box position=\"absolute\" width=\"100%\" height=\"100%\" top={0} right={0} \r\n                    display=\"flex\" alignItems=\"center\" justifyContent=\"center\" >\r\n                    <img alt=\"video thumbnail\" src={ thumbnail ? `/api/` : Thumbnail } style={{ maxWidth: '100%', maxHeight: \"100%\" }}/>\r\n                </Box>\r\n            </Box>\r\n            <Box display=\"flex\" marginTop=\"0.5rem\">\r\n                <Box width=\"2.4rem\" height=\"2.4rem\" borderRadius=\"1.2rem\" bgcolor=\"gray\" overflow=\"hidden\">\r\n\r\n                </Box>\r\n                <Box display=\"flex\" flexDirection=\"column\" marginLeft=\"0.5rem\">\r\n                    <Box fontSize=\"1.15rem\" fontWeight=\"400\">{ title }</Box>\r\n                    <Box fontSize=\"0.8rem\" color=\"#555555\">{ writer && `${writer.firstName} ${writer.lastName}` }</Box>\r\n                    <Box fontSize=\"0.8rem\" color=\"#555555\">{ writedAt.slice(0,10) }</Box>\r\n                </Box>\r\n            </Box>            \r\n        </Box>\r\n    </Grid>;\r\n};\r\n\r\nexport default VideoForm;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Add\\Add.js",[],["165","166"],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\VideoPage\\VideoPage.js",["167","168","169"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Box, IconButton } from \"@material-ui/core\";\r\n\r\nimport { AiFillLike, AiFillDislike } from \"react-icons/ai\";\r\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\r\n\r\n\r\n// 비디오 출력\r\nconst VideoPage = ({ location, match: { params } }) => {\r\n    // location 대신 match 의 params 값을 사용\r\n    const { video } = params;\r\n    const source = axios.CancelToken.source();\r\n    const [ data, setData ] = useState({});\r\n    const { title, writedAt, writer } = data;\r\n\r\n    const axiosVideo = () => {\r\n        axios.get(`/api/video/${video}`, { headers: { responseType: \"blob\" }, cancelToken: source.token })\r\n            .then(({ data }) => { \r\n                // console.log(data);\r\n                setData(data);\r\n            })\r\n            .catch( e => {\r\n                if( axios.isCancel(e) ) return;\r\n                alert(e);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        axiosVideo();\r\n        return () => source.cancel();\r\n    }, [])\r\n\r\n    // 비디오 클릭\r\n    const onClickVideoBar = ({ target }) => {\r\n        console.log(target.currentTime);\r\n\r\n    }\r\n\r\n    return <Box width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n        <Box flex={1} maxWidth=\"90rem\" margin=\"1.5rem\" display=\"flex\">\r\n            <Box flex={1}>\r\n                <Box width=\"100%\" paddingTop=\"calc(100% * 9 / 16)\" bgcolor=\"black\" position=\"relative\" marginBottom=\"1rem\">\r\n                    <video controls\r\n                        preload=\"false\" onClick={onClickVideoBar}\r\n                        style={{ position: \"absolute\", top: 0, width: \"100%\", height: \"100%\" }}\r\n                        key={data.video && `/api/video/get-video/${data.video}`}>\r\n                        <source src={data.video && `/api/video/get-video/${data.video}`} type=\"video/mp4\" />\r\n                        지원을 안하면 등장함\r\n                    </video>\r\n                </Box>\r\n                <Box color=\"blue\" fontSize=\"0.85rem\">태그</Box>\r\n                <Box fontSize=\"1.2rem\">{ title }</Box>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\"\r\n                    fontSize=\"0.85rem\" borderBottom={1} borderColor=\"#d0d0d0\">\r\n                    <Box fontWeight=\"600\" color=\"#777777\">{ writedAt && writedAt.slice(0,10) }</Box>\r\n                    <Box>\r\n                        <IconButton style={{ fontSize: \"1rem\", fontWeight: \"600\" }}>\r\n                            <AiFillLike size=\"1.5rem\"/>{\"1\"}\r\n                        </IconButton>\r\n                        <IconButton style={{ fontSize: \"1rem\", fontWeight: \"600\" }}>\r\n                            <AiFillDislike size=\"1.5rem\"/>{\"2\"}\r\n                        </IconButton>\r\n                    </Box>\r\n                </Box>\r\n                <Box borderBottom={1} borderColor=\"#d0d0d0\" paddingTop=\"1rem\" paddingBottom=\"1rem\">\r\n                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Box display=\"flex\" alignItems=\"center\" marginBottom=\"0.8rem\">\r\n                            <Box width=\"3rem\" height=\"3rem\" border={1} borderRadius=\"1.5rem\" overflow=\"hidden\" marginRight=\"1rem\">\r\n                                <img style={{ maxWidth: \"3rem\", maxHeight: \"3rem\" }} />\r\n                            </Box>\r\n                            <Box>\r\n                                <Box fontSize=\"0.9rem\">{ writer && `${writer.firstName} ${writer.lastName}`  }</Box>\r\n                                <Box fontSize=\"0.7rem\" fontWeight=\"600\" color=\"#777777\">구독자 수</Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box>\r\n                            <CustomButton onClick={null}>구독</CustomButton>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box paddingLeft=\"4rem\">\r\n                    { data.description }\r\n                    </Box>\r\n                </Box>\r\n                <Box marginTop=\"1rem\">\r\n                    <Box>댓글 1개</Box>\r\n                </Box>\r\n            </Box>\r\n            <Box display=\"flex\" flexDirection=\"column\" width=\"20rem\" marginLeft=\"1.5rem\" >\r\n                <Box display=\"flex\">\r\n                    <Box bgcolor=\"black\" width=\"10.4rem\" height=\"5.85rem\"\r\n                        display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                        <img />\r\n                    </Box>\r\n                    <Box fontSize=\"0.85rem\" marginLeft=\"0.3rem\" color=\"#707070\">\r\n                        <Box fontSize=\"1rem\" color=\"black\">타이틀</Box>\r\n                        <Box>작성자</Box>\r\n                        <Box>조회수, 작성일</Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            {/* <ReactPlayer controls url={video.video && `/api/video/get-video/${video.video}`} />\r\n            <Box>비디오 페이지</Box> */}\r\n        </Box>\r\n    </Box> \r\n}\r\n\r\nexport default VideoPage;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\CustomButton\\CustomButton.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\SignIn.js",["170","171","172"],"import { Box, LinearProgress } from \"@material-ui/core\";\r\nimport React, { useEffect, useReducer } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Logo from \"../../sources/google_logo.jpg\";\r\nimport { CHANGE_DATA, CHANGE_DATA_STRUCT, signInDefault, signInReducer } from \"./reducers/SignInReducer\";\r\nimport { signInRoute, singInDefaultRoute } from \"./signInRouter\";\r\n\r\nconst SignIn = ({ history }) => {\r\n    // const source = axios.CancelToken.source();\r\n\r\n    const [ state, dispatch ] = useReducer(signInReducer, signInDefault);\r\n    const { isLoading, isError, mode, signIn } = state;\r\n\r\n    // useEffect(() => {\r\n    //     return () => source.cancel();\r\n    // }, [])\r\n\r\n    const routeComponent = {\r\n        signIn,\r\n        dispatch,\r\n        CHANGE_DATA: CHANGE_DATA,\r\n        CHANGE_DATA_STRUCT: CHANGE_DATA_STRUCT,\r\n    }\r\n\r\n    const createRoute = () => {\r\n        return <Switch>\r\n            {\r\n                signInRoute.map( (route, idx) =>\r\n                    <Route key={`sign-in-${idx}`} path={route.path} render={() => <route.component { ...routeComponent } />} />)\r\n            }\r\n            <Redirect to={singInDefaultRoute} />\r\n        </Switch>;\r\n    }\r\n\r\n    useEffect(() => {\r\n        history.replace(`/identify/sign-in/${mode}`)\r\n    }, [mode])\r\n\r\n    return <Box width=\"100vw\" height=\"100vh\"\r\n        display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n        {/* <Box position=\"absolute\" top=\"0\" bgcolor=\"blue\">ㅇㅅㅇ</Box> */}\r\n        <Box width=\"24rem\" height=\"28rem\" padding=\"2rem\" paddingTop=\"3rem\" paddingBottom=\"3rem\"\r\n            border={1} borderColor=\"#999999\" borderRadius=\"0.5rem\" textAlign=\"center\"\r\n            position=\"relative\">\r\n            { isLoading && \r\n                <Box position=\"absolute\" display=\"flex\" flexDirection=\"column\" top={0} left={0} width=\"100%\" height=\"100%\">\r\n                    <LinearProgress />\r\n                    <Box flex={1} bgcolor=\"#9f9f9f\" style={{ opacity: \"30%\" }} zIndex={1}></Box>\r\n                </Box> \r\n            }\r\n            <Box><img src={Logo} style={{ maxWidth: \"7rem\" }} /></Box>\r\n            { createRoute() }\r\n        </Box>\r\n    </Box>\r\n}\r\n\r\nexport default SignIn;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignUp\\SignUp.js",["173","174","175"],"import { Box, Button, Grid, TextField } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useReducer } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Logo from \"../../sources/google_logo.jpg\";\r\nimport { CHANGE_DATA } from \"../Home/reducers/HomeReducer\";\r\nimport { CHANGE_DATA_STRUCT, signUpDefault, signUpReducer } from \"./reducers/SignUpReducer\";\r\n\r\nconst SignUp = ({ history }) => {\r\n    const source = axios.CancelToken.source();\r\n\r\n    const [ state, dispatch ] = useReducer(signUpReducer, signUpDefault);\r\n    const { isLoading, isError, signUp } = state;\r\n\r\n    const onChangeInput = ({ currentTarget: { value, id }}) => dispatch({ type: CHANGE_DATA_STRUCT, target: \"signUp\", data: { [id]: value } });\r\n    const createTextField = (placeholder, value, id, type=\"text\") => \r\n        <TextField value={value} type={type} id={id} onChange={onChangeInput} variant=\"outlined\" size=\"small\" fullWidth placeholder={placeholder} />\r\n\r\n    // 에러 타입 확인\r\n    const errorType = () => {\r\n        switch (isError) {\r\n            case 100:\r\n                return \"비밀번호가 일치하지 않습니다. 다시 확인하세요.\";\r\n            // case 401:\r\n            //     return \"잘못된 비밀번호입니다. 다시 확인하세요.\";\r\n            case 401:\r\n                return \"서버에 오류가 발생하였습니다. 잠시 후 다시 시도해주세요.\"\r\n            case 404:\r\n                return \"이미 존재하는 사용자 Email 입니다.\";   \r\n            case 500:\r\n                return \"인터넷에 연결되어 있는지 확인한 후 다시 시도해보세요.\";\r\n            default:\r\n                return \"알 수 없는 오류입니다. 잠시 후 다시 시도해주세요.\";\r\n                // throw new Error(\"cant find error type\");\r\n        }\r\n    }\r\n    \r\n    const onClickSubmit = () => {\r\n        const { passwordCheck, ...others } = signUp;\r\n        if( others.password !== passwordCheck ) return dispatch({ type: CHANGE_DATA, data: { isError: 100 }})\r\n\r\n        dispatch({ type: CHANGE_DATA, data: { isLoading: true }});\r\n        axios.post('/api/identify/sign-up', others, { cancelToken: source.token })\r\n            .then(() => {\r\n                // 회원가입여부 처리함\r\n                history.push('/identify');\r\n            })\r\n            .catch( e => {\r\n                if(axios.isCancel(e)) return;\r\n                console.log(e.response);\r\n                if( e.response ) { // 네트워크 오류 검사\r\n                    dispatch({ type: CHANGE_DATA, data: {\r\n                        isLoading: false,\r\n                        isError: e.response.status,\r\n                    }})\r\n                }\r\n                else {\r\n                    dispatch({ type: CHANGE_DATA, data: {\r\n                        isLoading: false,\r\n                        isError: 500,\r\n                    }})\r\n                }\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => source.cancel();\r\n    }, [])\r\n\r\n    return <Box width=\"100vw\" height=\"100vh\"\r\n        display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n        <Box width=\"40rem\" padding=\"2rem\" paddingTop=\"3rem\" paddingBottom=\"3rem\"\r\n            border={1} borderColor=\"#999999\" borderRadius=\"0.5rem\"\r\n            display=\"flex\" alignItems=\"center\" position=\"relative\">\r\n            <Box flex={7} display=\"flex\" flexDirection=\"column\">\r\n                <img src={Logo} style={{ maxWidth: \"7rem\" }} />\r\n                <Box fontSize=\"1.4rem\" fontWeight=\"600\" >YouTube Clone 계정 만들기</Box>\r\n                <Box fontSize=\"1rem\" fontWeight=\"500\" marginTop=\"0.5rem\" marginBottom=\"2rem\">\r\n                    <Link to='/' style={{ textDecoration: \"none\", color: \"#777777\" }}>Youtube Clone으로 이동</Link>\r\n                </Box>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={6}>\r\n                        { createTextField(\"성\", signUp.firstName, \"firstName\") }\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        { createTextField(\"이름\", signUp.lastName, \"lastName\") }\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        { createTextField(\"이메일 주소\", signUp.email, \"email\", \"email\") }\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        { createTextField(\"비밀번호\", signUp.password, \"password\", \"password\") }\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        { createTextField(\"확인\", signUp.passwordCheck, \"passwordCheck\", \"password\") }\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Box marginLeft=\"1rem\" fontSize=\"0.8rem\" color=\"#777777\">\r\n                            문자, 숫자, 기호를 조합하여 8자 이상을 사용하세요\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Box height=\"0.8rem\" marginTop=\"2rem\" textAlign=\"center\" fontSize=\"0.8rem\" fontWeight=\"600\" color=\"red\">\r\n                    { isError ? errorType() : ''  }\r\n                </Box>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" marginTop=\"2rem\">\r\n                    <Link to=\"/identify/sign-in\" style={{ textDecoration: \"none\", color: \"blue\" }}>로그인 창으로</Link>\r\n                    <Button onClick={onClickSubmit} variant=\"contained\" color=\"primary\">가입</Button>\r\n                </Box>\r\n            </Box>\r\n            <Box flex={5} display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n                <Box fontSize=\"1.2rem\" fontWeight=\"600\">- Youtube Clone -</Box>\r\n                <Box fontSize=\"0.8rem\" color=\"#777777\">created by 최현수</Box>\r\n                <Box marginTop=\"1rem\">REACT / NESTJS / TYPEORM</Box>\r\n            </Box>\r\n        </Box>\r\n        {/* <Box>회원가입</Box> */}\r\n    </Box>\r\n}\r\n\r\nexport default SignUp;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\frames\\IdentifyFrame.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignUp\\reducers\\SignUpReducer.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\reducers\\SignInReducer.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\signInRouter.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\pages\\EmailPage.js",["176"],"import { Box, Button, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst EmailPage = ({ signIn, dispatch, CHANGE_DATA, CHANGE_DATA_STRUCT }) => {\r\n\r\n    const source = axios.CancelToken.source();\r\n\r\n    // 입력\r\n    const onChangeInput = ({ currentTarget: { id, value }}) => {\r\n        dispatch({ type: CHANGE_DATA_STRUCT, target: 'signIn', data: { [id]: value } });\r\n    }\r\n\r\n    // 이메일확인 완료\r\n    const onClickSubmit = () => {\r\n        if( !signIn.email ) return; // 빈 칸은 허용x\r\n        dispatch({ type: CHANGE_DATA, data: { isLoading: true }});\r\n        axios.post('/api/identify/sign-in/email', { email: signIn.email }, { cancelToken: source.token })\r\n            .then(({ data }) => {\r\n                if( !data ) {\r\n                    return dispatch({ type: CHANGE_DATA, data: { isLoading: false }});\r\n                }\r\n                dispatch({ type: CHANGE_DATA, data: { mode: 'password', isLoading: false, signIn: { ...signIn, ...data } }});\r\n            })\r\n            .catch( e => {\r\n                if( axios.isCancel(e) ) return;\r\n                dispatch({ type: CHANGE_DATA, data: { isLoading: false }});\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => source.cancel();\r\n    }, [])\r\n\r\n    return <>\r\n        <Box fontSize=\"1.4rem\" fontWeight=\"600\">로그인</Box>\r\n        <Box fontSize=\"1rem\" fontWeight=\"500\" marginTop=\"0.5rem\" marginBottom=\"2rem\">\r\n            <Link to='/' style={{ textDecoration: \"none\", color: \"#777777\" }}>YouTube Clone으로 이동</Link>\r\n        </Box>\r\n        <Box width=\"100%\">\r\n            <TextField type=\"email\" value={signIn.email} id=\"email\" onChange={onChangeInput} variant=\"outlined\" fullWidth label=\"이메일 또는 휴대전화\"/>\r\n            <Box display=\"flex\" marginTop=\"0.5rem\" fontSize=\"0.9rem\">\r\n                <Link style={{ textDecoration: \"none\", color: \"blue\" }}>이메일을 앚으셨나요?</Link>\r\n            </Box>\r\n        </Box>\r\n        <Box height=\"0.8rem\" marginTop=\"2rem\" textAlign=\"center\" fontSize=\"0.8rem\" fontWeight=\"600\" color=\"red\">\r\n            {/* { isError ? errorType() : ''  } */}\r\n        </Box>\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" marginTop=\"3rem\">\r\n            <Link to=\"/identify/sign-up\" style={{ textDecoration: \"none\", color: \"blue\" }}>계정 만들기</Link>\r\n            <Button disabled={!signIn.email} onClick={onClickSubmit} variant=\"contained\" color=\"primary\">다음</Button>\r\n        </Box>\r\n    </>\r\n};\r\n\r\nexport default EmailPage;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\SignIn\\pages\\PasswordPage.js",["177","178"],"import { Box, Button, Checkbox, FormControlLabel, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport Sample from \"../../../sources/sample_img.png\";\r\n\r\nconst PasswordPage = ({ signIn, dispatch, CHANGE_DATA, CHANGE_DATA_STRUCT }) => {\r\n\r\n    const history = useHistory();\r\n    const source = axios.CancelToken.source();\r\n    const [ showPassword, setShowPassword ] = useState(false);\r\n    // 비밀번호 표시 변경\r\n    const handleChange = () => setShowPassword(!showPassword);\r\n\r\n    // 입력\r\n    const onChangeInput = ({ currentTarget: { id, value }}) => {\r\n        dispatch({ type: CHANGE_DATA_STRUCT, target: 'signIn', data: { [id]: value } });\r\n    }\r\n\r\n    const onClickSubmit = () => {\r\n        if( !signIn.password ) return;\r\n        dispatch({ type: CHANGE_DATA, data: { isLoading: true }});\r\n        axios.post('/api/identify/sign-in/password', \r\n            { email: signIn.email, password: signIn.password }, \r\n            { cancelToken: source.token })\r\n            .then(({ data }) => {\r\n                const { password, ...userInfo } = signIn;\r\n                localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\r\n                history.push('/');\r\n            })\r\n            .catch( e => {\r\n                if( axios.isCancel(e) ) return;\r\n                dispatch({ type: CHANGE_DATA, data: { isLoading: false }});\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => source.cancel();\r\n    }, [])\r\n\r\n    return <>\r\n        <Box fontSize=\"1.4rem\" fontWeight=\"600\">{`${signIn.firstName} ${signIn.lastName}`}</Box>\r\n        <Box fontSize=\"0.95rem\" fontWeight=\"500\" marginTop=\"0.5rem\" marginBottom=\"2rem\"\r\n            display=\"flex\" justifyContent=\"center\">\r\n            {/* <Link to='/' style={{ textDecoration: \"none\", color: \"#777777\" }}>YouTube Clone으로 이동</Link> */}\r\n            <Box border={1} borderRadius=\"1rem\" padding=\"0.2rem\" paddingLeft=\"0.5rem\" paddingRight=\"0.5rem\" textAlign=\"left\">\r\n                {/* <Box border={1} borderRadius=\"1rem\" bgcolor=\"gray\" display=\"inline\" marginRight=\"0.5rem\" overflow=\"hidden\">\r\n                    <img src={Sample} style={{ width: \"1rem\", height: \"1rem\" }} />\r\n                </Box> */}\r\n                { signIn.email }\r\n            </Box>\r\n        </Box>\r\n\r\n        <Box width=\"100%\">\r\n            <TextField type={ showPassword ? \"text\" : \"password\" } value={signIn.password} id=\"password\" onChange={onChangeInput} variant=\"outlined\" fullWidth label=\"비밀번호 입력\"/>\r\n            <Box display=\"flex\" marginTop=\"0.5rem\" fontSize=\"0.9rem\">\r\n                <FormControlLabel label=\"비밀번호 표시\"\r\n                    control={<Checkbox checked={showPassword} onChange={handleChange} name=\"passwordHide\" color=\"primary\" />}/>\r\n            </Box>\r\n        </Box>\r\n        <Box height=\"0.8rem\" marginTop=\"2rem\" textAlign=\"center\" fontSize=\"0.8rem\" fontWeight=\"600\" color=\"red\">\r\n            {/* { isError ? errorType() : ''  } */}\r\n        </Box>\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" marginTop=\"3rem\">\r\n            <Link to=\"/\" style={{ textDecoration: \"none\", color: \"blue\" }}>비밀번호 찾기</Link>\r\n            <Button disabled={!signIn.password} onClick={onClickSubmit} variant=\"contained\" color=\"primary\">다음</Button>\r\n        </Box>\r\n    </>\r\n};\r\n\r\nexport default PasswordPage;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\ProfileMenu\\ProfileMenu.js",["179","180","181"],"import { Box, Button, ClickAwayListener, Grow, IconButton, MenuItem, MenuList, Paper, Popper } from \"@material-ui/core\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { menuList } from \"./data/menuList\";\r\n\r\nconst ProfileMenu = ({ userInfo: { firstName, lastName, email } }) => {\r\n    const history = useHistory();\r\n\r\n    const [ open, setOpen ] = useState(false);\r\n    const anchorRef = useRef();\r\n\r\n    const onClickMenu = ({ currentTarget: { id }}) => {\r\n        handleClose();\r\n        console.log(id);\r\n        if( id === \"log-out\" ) localStorage.removeItem('userInfo');\r\n        history.go();\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleListKeyDown = (event) => {\r\n        if (event.key === 'Tab') {\r\n          event.preventDefault();\r\n          setOpen(false);\r\n        }\r\n    }\r\n    \r\n    const onClickButton = () => setOpen(!open);\r\n\r\n    return <Box display=\"flex\">\r\n        <Box paddingLeft=\"1.5rem\" paddingRight=\"1.5rem\" ref={anchorRef}>\r\n            <IconButton onClick={onClickButton}\r\n                style={{ background:\"#7777ff\", borderRadius: \"1rem\", \r\n                border: \"0\", width: \"2rem\", height: \"2rem\", fontSize: \"1rem\",\r\n                textAlign:\"center\", color: \"white\", lineHeight: \"2rem\" }}>\r\n                {`${lastName[0]}`}    \r\n            </IconButton>\r\n            {/* <button onClick={onClickButton}\r\n                style={{ background:\"#7777ff\", borderRadius: \"1rem\", \r\n                border: \"0\", width: \"2rem\", height: \"2rem\",\r\n                textAlign:\"center\", color: \"white\", lineHeight: \"2rem\" }}>\r\n                {`${userInfo.lastName[0]}`}\r\n            </button> */}\r\n        </Box>\r\n        <Popper open={open} anchorEl={anchorRef.current} transition >\r\n            <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                <Box width=\"20rem\" display=\"flex\" flexDirection=\"column\">\r\n                    <Box display=\"flex\" padding=\"1rem\" borderColor=\"#aaaaaa\" borderBottom={1}>\r\n                        <Box width=\"3rem\" height=\"3rem\" bgcolor=\"#7777ff\" borderRadius=\"1.5rem\" \r\n                            textAlign=\"center\" lineHeight=\"3rem\" fontSize=\"1.5rem\" color=\"#ffffff\">\r\n                            {`${lastName[0]}`} \r\n                        </Box>\r\n                        <Box marginLeft=\"1rem\" display=\"flex\" flexDirection=\"column\">\r\n                            <Box height=\"1.5rem\">{ `${firstName}${lastName}` }</Box>\r\n                            <Box height=\"1.5rem\">{email}</Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                        {\r\n                            menuList.map( (menu, idx) => {\r\n                                return <MenuItem key={`menuItem-${idx}`} onClick={onClickMenu} id={menu.id}>\r\n                                        <menu.icon size=\"1.3rem\" />\r\n                                        <Box paddingLeft=\"0.5rem\" fontSize=\"0.9rem\" fontWeight=\"700\">\r\n                                            { menu.text }\r\n                                        </Box>\r\n                                    </MenuItem>\r\n                            })   \r\n                        }\r\n                    </MenuList>\r\n                </Box>\r\n                </ClickAwayListener>\r\n            </Paper>\r\n        </Popper>\r\n    </Box>\r\n};\r\n\r\nexport default ProfileMenu;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\ProfileMenu\\data\\menuList.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Upload\\Upload.js",["182","183","184","185","186","187","188","189","190"],"import React, { useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport { uploadDefault, uploadReducer, CHANGE_DATA } from \"./reducers/UploadReducer\";\r\nimport { uploadRoute, uploadDefaultRoute } from \"./uploadRouter\";\r\n// import SelectPage from \"./pages/SelectPage\";\r\n\r\nconst Upload = ({ history }) => {\r\n    const userInfo = JSON.parse(localStorage.getItem('userInfo'));\r\n\r\n    const [ state, dispatch ] = useReducer(uploadReducer, uploadDefault);\r\n    const { title, description, thumbnail, video, mode } = state;\r\n\r\n    // const onClickSubmit = () => {\r\n\r\n    //     // if( !image || !video || !title ) return alert(\"빈칸있음\");\r\n    //     const formData = new FormData();\r\n    //     formData.append('writer', userInfo.email);\r\n    //     formData.append('video', video);\r\n    //     formData.append('title', title);\r\n    //     formData.append('description', description);\r\n\r\n    //     // formData.append('thumbnail', image);\r\n\r\n    //     axios.post('/api/file/upload', formData, { cancelToken: source.token })\r\n    //         .then( ({ data }) => {\r\n    //             console.log(data);\r\n    //         })\r\n    //         .catch( e => alert(e) );\r\n    // };\r\n\r\n    // dispatch 함수\r\n    const dispatchInput = (target, value) => {\r\n        dispatch({ type: CHANGE_DATA, data: { [target]: value }});\r\n    }\r\n\r\n    // // src 파일 수정\r\n    // const onChangeSrc = ({ currentTarget: { files, id }}) => {\r\n    //     console.log(files[0]) ;\r\n    //     const [ tag, target ] = id.split('-');\r\n    //     dispatch({ type: CHANGE_DATA, data: { [target]: files[0] }});\r\n    // }\r\n\r\n    // // 텍스트 수정\r\n    // const onChangeText = ({ currentTarget: { value, id }}) => {\r\n    //     const [ tag, target ] = id.split('-');\r\n    //     dispatch({ type: CHANGE_DATA, data: { [target]: value }});\r\n    // }\r\n\r\n\r\n    const createRoute = () => {\r\n        return <Switch>\r\n                {\r\n                    uploadRoute.map( (route, idx) => {\r\n                        return <Route key={`upload-${idx}`} path={route.path} render={() => <route.component dispatchInput={dispatchInput} />} />\r\n                    })\r\n                }\r\n                <Redirect to={uploadDefaultRoute} />\r\n            </Switch>;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if( video ) history.replace(`/upload/option`);\r\n    }, [video]);\r\n\r\n    return (\r\n        <Box width=\"100%\" height=\"100%\">\r\n            {/* <Box width=\"10rem\" height=\"10rem\" bgcolor=\"blue\">아무내용이나 적어보자\r\n                <Button onClick={ () => { history.replace('/upload/video' )}}>버튼버튼</Button>\r\n            </Box> */}\r\n            { createRoute() }\r\n            {/* <SelectPage dispatchInput={dispatchInput} /> */}\r\n            {\r\n            /*\r\n            <Box>\r\n                <img src={thumbnail && URL.createObjectURL(thumbnail)} alt=\"썸네일\" style={{ maxWidth: \"100%\" }}/>\r\n                <input id=\"input-thumbnail\" type=\"file\" accept=\"image/*\" onChange={onChangeSrc} />                \r\n            </Box>\r\n            <Box>\r\n                <video autoPlay src={video && URL.createObjectURL(video)} style={{ maxWidth: \"100%\" }}/>\r\n                <input id=\"input-video\" type=\"file\" accept=\"video/*\" onChange={onChangeSrc} />\r\n            </Box>\r\n            <input id=\"input-title\" value={title} placeholder=\"제목\" onChange={onChangeText} />\r\n            <input id=\"input-description\" value={description} placeholder=\"부가설명\" onChange={onChangeText} />\r\n            <Button onClick={onClickSubmit}>게시글 추가</Button>\r\n            */\r\n            }\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Upload;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Upload\\reducers\\UploadReducer.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Upload\\pages\\SelectPage.js",["191","192"],"import { Box, Button } from \"@material-ui/core\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { AiOutlineCloudUpload } from \"react-icons/ai\";\r\n\r\nconst SelectPage = ({ dispatchInput }) => {\r\n\r\n    const input_video = useRef();\r\n    const [ disabled, setDisabled ] = useState(false);\r\n\r\n    const onClickEvent = () => {\r\n        input_video.current.click();\r\n    }\r\n\r\n    const onChangeSrc = ({ currentTarget: { files, id }}) => {\r\n        if( files.length < 0 ) return;\r\n        setDisabled(state => !state);\r\n        \r\n        const [ tag, target ] = id.split('-');\r\n        dispatchInput(target, files[0]);\r\n        // dispatchInput(\"mode\", \"option\");\r\n    }\r\n\r\n    // 원래는 label 로 돌려만들어도 되지만, 그냥 ref 써서 호출해버림\r\n    return (\r\n        <Box height=\"100%\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" marginBottom=\"1rem\">\r\n            {/* <video autoPlay src={video && URL.createObjectURL(video)} style={{ maxWidth: \"100%\" }}/> */}\r\n            <input id=\"input-video\" ref={input_video} style={{ display: \"none\" }}\r\n                type=\"file\" accept=\"video/*\" onChange={onChangeSrc}  />\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\"\r\n                width=\"10rem\" height=\"10rem\" borderRadius=\"5rem\" onClick={onClickEvent}\r\n                color=\"#888888\" bgcolor=\"#dddddd\" style={{ cursor: \"pointer\" }}>\r\n                <AiOutlineCloudUpload size=\"5rem\"/>\r\n            </Box>\r\n            <Box marginTop=\"1.5rem\" marginBottom=\"2rem\">\r\n                <Box>동영상 파일을 드래그 앤 드롭하여 업로드</Box>\r\n                <Box fontSize=\"0.87rem\" color=\"#030202\" marginTop=\"0.3rem\">\r\n                    동영상을 게시하기 전에는 비공개로 설정됩니다.\r\n                </Box>\r\n            </Box>\r\n            <Button onClick={onClickEvent} disabled={disabled} color=\"primary\" variant=\"contained\">\r\n                <Box color=\"#ffffff\">파일 선택</Box>\r\n            </Button>\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default SelectPage;","D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Upload\\uploadRouter.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\views\\Upload\\pages\\OptionPage.js",[],"D:\\Visual Studio Code Project\\React-Native\\video_clone\\webpage\\src\\components\\RedditTextField\\RedditTextField.js",[],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"193","replacedBy":"197"},{"ruleId":"195","replacedBy":"198"},{"ruleId":"193","replacedBy":"199"},{"ruleId":"195","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":19},{"ruleId":"201","severity":1,"message":"205","line":3,"column":8,"nodeType":"203","messageId":"204","endLine":3,"endColumn":13},{"ruleId":"201","severity":1,"message":"206","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":14},{"ruleId":"201","severity":1,"message":"207","line":57,"column":11,"nodeType":"203","messageId":"204","endLine":57,"endColumn":20},{"ruleId":"208","severity":1,"message":"209","line":74,"column":8,"nodeType":"210","endLine":74,"endColumn":10,"suggestions":"211"},{"ruleId":"201","severity":1,"message":"212","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":15},{"ruleId":"201","severity":1,"message":"213","line":3,"column":17,"nodeType":"203","messageId":"204","endLine":3,"endColumn":23},{"ruleId":"201","severity":1,"message":"214","line":1,"column":40,"nodeType":"203","messageId":"204","endLine":1,"endColumn":48},{"ruleId":"201","severity":1,"message":"215","line":12,"column":13,"nodeType":"203","messageId":"204","endLine":12,"endColumn":22},{"ruleId":"208","severity":1,"message":"216","line":32,"column":8,"nodeType":"210","endLine":32,"endColumn":10,"suggestions":"217"},{"ruleId":"201","severity":1,"message":"205","line":2,"column":8,"nodeType":"203","messageId":"204","endLine":2,"endColumn":13},{"ruleId":"201","severity":1,"message":"218","line":9,"column":25,"nodeType":"203","messageId":"204","endLine":9,"endColumn":36},{"ruleId":"193","replacedBy":"219"},{"ruleId":"195","replacedBy":"220"},{"ruleId":"208","severity":1,"message":"221","line":32,"column":8,"nodeType":"210","endLine":32,"endColumn":10,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":70,"column":33,"nodeType":"225","endLine":70,"endColumn":88},{"ruleId":"223","severity":1,"message":"224","line":93,"column":25,"nodeType":"225","endLine":93,"endColumn":32},{"ruleId":"201","severity":1,"message":"226","line":13,"column":24,"nodeType":"203","messageId":"204","endLine":13,"endColumn":31},{"ruleId":"208","severity":1,"message":"227","line":38,"column":8,"nodeType":"210","endLine":38,"endColumn":14,"suggestions":"228"},{"ruleId":"223","severity":1,"message":"224","line":52,"column":18,"nodeType":"225","endLine":52,"endColumn":65},{"ruleId":"201","severity":1,"message":"215","line":14,"column":13,"nodeType":"203","messageId":"204","endLine":14,"endColumn":22},{"ruleId":"208","severity":1,"message":"209","line":69,"column":8,"nodeType":"210","endLine":69,"endColumn":10,"suggestions":"229"},{"ruleId":"223","severity":1,"message":"224","line":77,"column":17,"nodeType":"225","endLine":77,"endColumn":64},{"ruleId":"208","severity":1,"message":"209","line":34,"column":8,"nodeType":"210","endLine":34,"endColumn":10,"suggestions":"230"},{"ruleId":"201","severity":1,"message":"231","line":6,"column":8,"nodeType":"203","messageId":"204","endLine":6,"endColumn":14},{"ruleId":"208","severity":1,"message":"209","line":40,"column":8,"nodeType":"210","endLine":40,"endColumn":10,"suggestions":"232"},{"ruleId":"201","severity":1,"message":"233","line":1,"column":15,"nodeType":"203","messageId":"204","endLine":1,"endColumn":21},{"ruleId":"201","severity":1,"message":"234","line":1,"column":42,"nodeType":"203","messageId":"204","endLine":1,"endColumn":46},{"ruleId":"201","severity":1,"message":"206","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":14},{"ruleId":"201","severity":1,"message":"205","line":2,"column":8,"nodeType":"203","messageId":"204","endLine":2,"endColumn":13},{"ruleId":"201","severity":1,"message":"235","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":23},{"ruleId":"201","severity":1,"message":"233","line":4,"column":15,"nodeType":"203","messageId":"204","endLine":4,"endColumn":21},{"ruleId":"201","severity":1,"message":"236","line":11,"column":11,"nodeType":"203","messageId":"204","endLine":11,"endColumn":19},{"ruleId":"201","severity":1,"message":"237","line":14,"column":13,"nodeType":"203","messageId":"204","endLine":14,"endColumn":18},{"ruleId":"201","severity":1,"message":"218","line":14,"column":20,"nodeType":"203","messageId":"204","endLine":14,"endColumn":31},{"ruleId":"201","severity":1,"message":"238","line":14,"column":33,"nodeType":"203","messageId":"204","endLine":14,"endColumn":42},{"ruleId":"201","severity":1,"message":"239","line":14,"column":51,"nodeType":"203","messageId":"204","endLine":14,"endColumn":55},{"ruleId":"208","severity":1,"message":"227","line":66,"column":8,"nodeType":"210","endLine":66,"endColumn":15,"suggestions":"240"},{"ruleId":"201","severity":1,"message":"202","line":2,"column":17,"nodeType":"203","messageId":"204","endLine":2,"endColumn":26},{"ruleId":"201","severity":1,"message":"241","line":18,"column":17,"nodeType":"203","messageId":"204","endLine":18,"endColumn":20},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],["242"],["243"],["242"],["243"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Link' is defined but never used.","'axiosUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'source'. Either include it or remove the dependency array.","ArrayExpression",["244"],"'Route' is defined but never used.","'Router' is defined but never used.","'useState' is defined but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'axiosVideos' and 'source'. Either include them or remove the dependency array.",["245"],"'description' is assigned a value but never used.",["242"],["243"],"React Hook useEffect has missing dependencies: 'axiosVideo' and 'source'. Either include them or remove the dependency array.",["246"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["247"],["248"],["249"],"'Sample' is defined but never used.",["250"],"'Button' is defined but never used.","'Grow' is defined but never used.","'BrowserRouter' is defined but never used.","'userInfo' is assigned a value but never used.","'title' is assigned a value but never used.","'thumbnail' is assigned a value but never used.","'mode' is assigned a value but never used.",["251"],"'tag' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"252","fix":"260"},{"desc":"252","fix":"261"},{"desc":"252","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [source]",{"range":"265","text":"266"},"Update the dependencies array to be: [axiosVideos, source]",{"range":"267","text":"268"},"Update the dependencies array to be: [axiosVideo, source]",{"range":"269","text":"270"},"Update the dependencies array to be: [history, mode]",{"range":"271","text":"272"},{"range":"273","text":"266"},{"range":"274","text":"266"},{"range":"275","text":"266"},"Update the dependencies array to be: [history, video]",{"range":"276","text":"277"},[2505,2507],"[source]",[1058,1060],"[axiosVideos, source]",[1041,1043],"[axiosVideo, source]",[1300,1306],"[history, mode]",[2760,2762],[1325,1327],[1556,1558],[2437,2444],"[history, video]"]